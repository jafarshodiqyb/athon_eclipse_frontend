[{"C:\\Users\\Ja'far Shodiq YB\\Documents\\jafar\\DIT\\training\\Telkom Athon #1 Programmer\\Coursera\\2020-12-15 TA\\frontend-ta\\src\\index.js":"1","C:\\Users\\Ja'far Shodiq YB\\Documents\\jafar\\DIT\\training\\Telkom Athon #1 Programmer\\Coursera\\2020-12-15 TA\\frontend-ta\\src\\App.js":"2","C:\\Users\\Ja'far Shodiq YB\\Documents\\jafar\\DIT\\training\\Telkom Athon #1 Programmer\\Coursera\\2020-12-15 TA\\frontend-ta\\src\\reportWebVitals.js":"3","C:\\Users\\Ja'far Shodiq YB\\Documents\\jafar\\DIT\\training\\Telkom Athon #1 Programmer\\Coursera\\2020-12-15 TA\\frontend-ta\\src\\services\\user.service.js":"4","C:\\Users\\Ja'far Shodiq YB\\Documents\\jafar\\DIT\\training\\Telkom Athon #1 Programmer\\Coursera\\2020-12-15 TA\\frontend-ta\\src\\services\\check.service.js":"5","C:\\Users\\Ja'far Shodiq YB\\Documents\\jafar\\DIT\\training\\Telkom Athon #1 Programmer\\Coursera\\2020-12-15 TA\\frontend-ta\\src\\services\\activity.service.js":"6","C:\\Users\\Ja'far Shodiq YB\\Documents\\jafar\\DIT\\training\\Telkom Athon #1 Programmer\\Coursera\\2020-12-15 TA\\frontend-ta\\src\\pages\\main.js":"7","C:\\Users\\Ja'far Shodiq YB\\Documents\\jafar\\DIT\\training\\Telkom Athon #1 Programmer\\Coursera\\2020-12-15 TA\\frontend-ta\\src\\pages\\router\\ProtectedRoute.js":"8","C:\\Users\\Ja'far Shodiq YB\\Documents\\jafar\\DIT\\training\\Telkom Athon #1 Programmer\\Coursera\\2020-12-15 TA\\frontend-ta\\src\\store\\configureStore.js":"9","C:\\Users\\Ja'far Shodiq YB\\Documents\\jafar\\DIT\\training\\Telkom Athon #1 Programmer\\Coursera\\2020-12-15 TA\\frontend-ta\\src\\utils\\history.js":"10","C:\\Users\\Ja'far Shodiq YB\\Documents\\jafar\\DIT\\training\\Telkom Athon #1 Programmer\\Coursera\\2020-12-15 TA\\frontend-ta\\src\\pages\\login\\LoginPage.js":"11","C:\\Users\\Ja'far Shodiq YB\\Documents\\jafar\\DIT\\training\\Telkom Athon #1 Programmer\\Coursera\\2020-12-15 TA\\frontend-ta\\src\\store\\action\\alert.actions.js":"12","C:\\Users\\Ja'far Shodiq YB\\Documents\\jafar\\DIT\\training\\Telkom Athon #1 Programmer\\Coursera\\2020-12-15 TA\\frontend-ta\\src\\pages\\home\\Home.js":"13","C:\\Users\\Ja'far Shodiq YB\\Documents\\jafar\\DIT\\training\\Telkom Athon #1 Programmer\\Coursera\\2020-12-15 TA\\frontend-ta\\src\\store\\action\\user.actions.js":"14","C:\\Users\\Ja'far Shodiq YB\\Documents\\jafar\\DIT\\training\\Telkom Athon #1 Programmer\\Coursera\\2020-12-15 TA\\frontend-ta\\src\\store\\action\\check.actions.js":"15","C:\\Users\\Ja'far Shodiq YB\\Documents\\jafar\\DIT\\training\\Telkom Athon #1 Programmer\\Coursera\\2020-12-15 TA\\frontend-ta\\src\\store\\action\\activity.actions.js":"16","C:\\Users\\Ja'far Shodiq YB\\Documents\\jafar\\DIT\\training\\Telkom Athon #1 Programmer\\Coursera\\2020-12-15 TA\\frontend-ta\\src\\utils\\baseURL.js":"17","C:\\Users\\Ja'far Shodiq YB\\Documents\\jafar\\DIT\\training\\Telkom Athon #1 Programmer\\Coursera\\2020-12-15 TA\\frontend-ta\\src\\utils\\auth-header.js":"18","C:\\Users\\Ja'far Shodiq YB\\Documents\\jafar\\DIT\\training\\Telkom Athon #1 Programmer\\Coursera\\2020-12-15 TA\\frontend-ta\\src\\store\\reducer\\index.js":"19","C:\\Users\\Ja'far Shodiq YB\\Documents\\jafar\\DIT\\training\\Telkom Athon #1 Programmer\\Coursera\\2020-12-15 TA\\frontend-ta\\src\\store\\reducer\\activity.reducer.js":"20","C:\\Users\\Ja'far Shodiq YB\\Documents\\jafar\\DIT\\training\\Telkom Athon #1 Programmer\\Coursera\\2020-12-15 TA\\frontend-ta\\src\\store\\reducer\\alert.reducer.js":"21","C:\\Users\\Ja'far Shodiq YB\\Documents\\jafar\\DIT\\training\\Telkom Athon #1 Programmer\\Coursera\\2020-12-15 TA\\frontend-ta\\src\\store\\reducer\\users.reducer.js":"22","C:\\Users\\Ja'far Shodiq YB\\Documents\\jafar\\DIT\\training\\Telkom Athon #1 Programmer\\Coursera\\2020-12-15 TA\\frontend-ta\\src\\store\\reducer\\register.reducer.js":"23","C:\\Users\\Ja'far Shodiq YB\\Documents\\jafar\\DIT\\training\\Telkom Athon #1 Programmer\\Coursera\\2020-12-15 TA\\frontend-ta\\src\\store\\reducer\\auth.reducer.js":"24","C:\\Users\\Ja'far Shodiq YB\\Documents\\jafar\\DIT\\training\\Telkom Athon #1 Programmer\\Coursera\\2020-12-15 TA\\frontend-ta\\src\\store\\reducer\\check.reducer.js":"25","C:\\Users\\Ja'far Shodiq YB\\Documents\\jafar\\DIT\\training\\Telkom Athon #1 Programmer\\Coursera\\2020-12-15 TA\\frontend-ta\\src\\store\\type\\alert.type.js":"26","C:\\Users\\Ja'far Shodiq YB\\Documents\\jafar\\DIT\\training\\Telkom Athon #1 Programmer\\Coursera\\2020-12-15 TA\\frontend-ta\\src\\store\\type\\activity.type.js":"27","C:\\Users\\Ja'far Shodiq YB\\Documents\\jafar\\DIT\\training\\Telkom Athon #1 Programmer\\Coursera\\2020-12-15 TA\\frontend-ta\\src\\store\\type\\check.type.js":"28","C:\\Users\\Ja'far Shodiq YB\\Documents\\jafar\\DIT\\training\\Telkom Athon #1 Programmer\\Coursera\\2020-12-15 TA\\frontend-ta\\src\\store\\type\\user.type.js":"29","C:\\Users\\Ja'far Shodiq YB\\Documents\\jafar\\DIT\\training\\Telkom Athon #1 Programmer\\Coursera\\2020-12-15 TA\\frontend-ta\\src\\pages\\register\\Register.js":"30","C:\\Users\\Ja'far Shodiq YB\\Documents\\jafar\\DIT\\training\\Telkom Athon #1 Programmer\\Coursera\\2020-12-15 TA\\frontend-ta\\src\\pages\\profile\\Profile.js":"31","C:\\Users\\Ja'far Shodiq YB\\Documents\\jafar\\DIT\\training\\Telkom Athon #1 Programmer\\Coursera\\2020-12-15 TA\\frontend-ta\\src\\store\\reducer\\stories.reducer.js":"32","C:\\Users\\Ja'far Shodiq YB\\Documents\\jafar\\DIT\\training\\Telkom Athon #1 Programmer\\Coursera\\2020-12-15 TA\\frontend-ta\\src\\store\\action\\stories.actions.js":"33","C:\\Users\\Ja'far Shodiq YB\\Documents\\jafar\\DIT\\training\\Telkom Athon #1 Programmer\\Coursera\\2020-12-15 TA\\frontend-ta\\src\\services\\stories.service.js":"34","C:\\Users\\Ja'far Shodiq YB\\Documents\\jafar\\DIT\\training\\Telkom Athon #1 Programmer\\Coursera\\2020-12-15 TA\\frontend-ta\\src\\store\\type\\stories.type.js":"35","C:\\Users\\Ja'far Shodiq YB\\Documents\\jafar\\DIT\\training\\Telkom Athon #1 Programmer\\Coursera\\2020-12-15 TA\\frontend-ta\\src\\store\\action\\loading.selector.js":"36","C:\\Users\\Ja'far Shodiq YB\\Documents\\jafar\\DIT\\training\\Telkom Athon #1 Programmer\\Coursera\\2020-12-15 TA\\frontend-ta\\src\\store\\reducer\\loading.reducer.js":"37","C:\\Users\\Ja'far Shodiq YB\\Documents\\jafar\\DIT\\training\\Telkom Athon #1 Programmer\\Coursera\\2020-12-15 TA\\frontend-ta\\src\\parts\\Footer\\Copyright.js":"38","C:\\Users\\Ja'far Shodiq YB\\Documents\\jafar\\DIT\\training\\Telkom Athon #1 Programmer\\Coursera\\2020-12-15 TA\\frontend-ta\\src\\components\\Form\\FormRegister.js":"39","C:\\Users\\Ja'far Shodiq YB\\Documents\\jafar\\DIT\\training\\Telkom Athon #1 Programmer\\Coursera\\2020-12-15 TA\\frontend-ta\\src\\components\\Card\\ActivityCard.js":"40","C:\\Users\\Ja'far Shodiq YB\\Documents\\jafar\\DIT\\training\\Telkom Athon #1 Programmer\\Coursera\\2020-12-15 TA\\frontend-ta\\src\\components\\Card\\ProfileCard.js":"41","C:\\Users\\Ja'far Shodiq YB\\Documents\\jafar\\DIT\\training\\Telkom Athon #1 Programmer\\Coursera\\2020-12-15 TA\\frontend-ta\\src\\parts\\Header\\TopBar.js":"42","C:\\Users\\Ja'far Shodiq YB\\Documents\\jafar\\DIT\\training\\Telkom Athon #1 Programmer\\Coursera\\2020-12-15 TA\\frontend-ta\\src\\parts\\Stories\\Stories.js":"43","C:\\Users\\Ja'far Shodiq YB\\Documents\\jafar\\DIT\\training\\Telkom Athon #1 Programmer\\Coursera\\2020-12-15 TA\\frontend-ta\\src\\parts\\ChatBar\\ChatBar.js":"44","C:\\Users\\Ja'far Shodiq YB\\Documents\\jafar\\DIT\\training\\Telkom Athon #1 Programmer\\Coursera\\2020-12-15 TA\\frontend-ta\\src\\components\\Tabs\\tabs.js":"45","C:\\Users\\Ja'far Shodiq YB\\Documents\\jafar\\DIT\\training\\Telkom Athon #1 Programmer\\Coursera\\2020-12-15 TA\\frontend-ta\\src\\components\\Tabs\\Tabs.js":"46","C:\\Users\\Ja'far Shodiq YB\\Documents\\jafar\\DIT\\training\\Telkom Athon #1 Programmer\\Coursera\\2020-12-15 TA\\frontend-ta\\src\\components\\List\\ActivtiyList.js":"47","C:\\Users\\Ja'far Shodiq YB\\Documents\\jafar\\DIT\\training\\Telkom Athon #1 Programmer\\Coursera\\2020-12-15 TA\\frontend-ta\\src\\components\\List\\MockActivity.js":"48","C:\\Users\\Ja'far Shodiq YB\\Documents\\jafar\\DIT\\training\\Telkom Athon #1 Programmer\\Coursera\\2020-12-15 TA\\frontend-ta\\src\\components\\Form\\PostFeed.js":"49","C:\\Users\\Ja'far Shodiq YB\\Documents\\jafar\\DIT\\training\\Telkom Athon #1 Programmer\\Coursera\\2020-12-15 TA\\frontend-ta\\src\\store\\reducer\\posts.reducer.js":"50","C:\\Users\\Ja'far Shodiq YB\\Documents\\jafar\\DIT\\training\\Telkom Athon #1 Programmer\\Coursera\\2020-12-15 TA\\frontend-ta\\src\\store\\type\\posts.type.js":"51","C:\\Users\\Ja'far Shodiq YB\\Documents\\jafar\\DIT\\training\\Telkom Athon #1 Programmer\\Coursera\\2020-12-15 TA\\frontend-ta\\src\\store\\action\\post.actions.js":"52","C:\\Users\\Ja'far Shodiq YB\\Documents\\jafar\\DIT\\training\\Telkom Athon #1 Programmer\\Coursera\\2020-12-15 TA\\frontend-ta\\src\\services\\posts.service.js":"53","C:\\Users\\Ja'far Shodiq YB\\Documents\\jafar\\DIT\\training\\Telkom Athon #1 Programmer\\Coursera\\2020-12-15 TA\\frontend-ta\\src\\services\\uploadImage.service.js":"54","C:\\Users\\Ja'far Shodiq YB\\Documents\\jafar\\DIT\\training\\Telkom Athon #1 Programmer\\Coursera\\2020-12-15 TA\\frontend-ta\\src\\components\\Card\\FeedCard.js":"55","C:\\Users\\Ja'far Shodiq YB\\Documents\\jafar\\DIT\\training\\Telkom Athon #1 Programmer\\Coursera\\2020-12-15 TA\\frontend-ta\\src\\components\\Wrapper\\Wrapper.js":"56","C:\\Users\\Ja'far Shodiq YB\\Documents\\jafar\\DIT\\training\\Telkom Athon #1 Programmer\\Coursera\\2020-12-15 TA\\frontend-ta\\src\\utils\\handleResponse.js":"57","C:\\Users\\Ja'far Shodiq YB\\Documents\\jafar\\DIT\\training\\Telkom Athon #1 Programmer\\Coursera\\2020-12-15 TA\\frontend-ta\\src\\utils\\dispatchSelector.js":"58","C:\\Users\\Ja'far Shodiq YB\\Documents\\jafar\\DIT\\training\\Telkom Athon #1 Programmer\\Coursera\\2020-12-15 TA\\frontend-ta\\src\\parts\\Content\\Feed\\Content.js":"59","C:\\Users\\Ja'far Shodiq YB\\Documents\\jafar\\DIT\\training\\Telkom Athon #1 Programmer\\Coursera\\2020-12-15 TA\\frontend-ta\\src\\parts\\Content\\Side\\Content2.js":"60","C:\\Users\\Ja'far Shodiq YB\\Documents\\jafar\\DIT\\training\\Telkom Athon #1 Programmer\\Coursera\\2020-12-15 TA\\frontend-ta\\src\\components\\Dialog\\DialogConfirmation.js":"61","C:\\Users\\Ja'far Shodiq YB\\Documents\\jafar\\DIT\\training\\Telkom Athon #1 Programmer\\Coursera\\2020-12-15 TA\\frontend-ta\\src\\components\\Dialog\\DialogAddEdit.js":"62","C:\\Users\\Ja'far Shodiq YB\\Documents\\jafar\\DIT\\training\\Telkom Athon #1 Programmer\\Coursera\\2020-12-15 TA\\frontend-ta\\src\\components\\Table\\TableProfileOverview.js":"63","C:\\Users\\Ja'far Shodiq YB\\Documents\\jafar\\DIT\\training\\Telkom Athon #1 Programmer\\Coursera\\2020-12-15 TA\\frontend-ta\\src\\components\\Form\\FormPassword.js":"64","C:\\Users\\Ja'far Shodiq YB\\Documents\\jafar\\DIT\\training\\Telkom Athon #1 Programmer\\Coursera\\2020-12-15 TA\\frontend-ta\\src\\components\\Form\\SecurityQuestions.js":"65","C:\\Users\\Ja'far Shodiq YB\\Documents\\jafar\\DIT\\training\\Telkom Athon #1 Programmer\\Coursera\\2020-12-15 TA\\frontend-ta\\src\\store\\middleware.js":"66"},{"size":545,"mtime":1609765831664,"results":"67","hashOfConfig":"68"},{"size":902,"mtime":1609765827234,"results":"69","hashOfConfig":"68"},{"size":362,"mtime":1608043298583,"results":"70","hashOfConfig":"68"},{"size":3894,"mtime":1609824675459,"results":"71","hashOfConfig":"68"},{"size":1113,"mtime":1609765716512,"results":"72","hashOfConfig":"68"},{"size":1281,"mtime":1609765712996,"results":"73","hashOfConfig":"68"},{"size":4936,"mtime":1609817800985,"results":"74","hashOfConfig":"68"},{"size":558,"mtime":1609765639438,"results":"75","hashOfConfig":"68"},{"size":611,"mtime":1609734064363,"results":"76","hashOfConfig":"68"},{"size":95,"mtime":1608108268765,"results":"77","hashOfConfig":"68"},{"size":9864,"mtime":1609765570963,"results":"78","hashOfConfig":"68"},{"size":337,"mtime":1609765738515,"results":"79","hashOfConfig":"68"},{"size":9190,"mtime":1609765520498,"results":"80","hashOfConfig":"68"},{"size":6420,"mtime":1609825058466,"results":"81","hashOfConfig":"68"},{"size":1846,"mtime":1609765741511,"results":"82","hashOfConfig":"68"},{"size":3558,"mtime":1609765735739,"results":"83","hashOfConfig":"68"},{"size":47,"mtime":1608120273019,"results":"84","hashOfConfig":"68"},{"size":261,"mtime":1609126896563,"results":"85","hashOfConfig":"68"},{"size":812,"mtime":1609765786520,"results":"86","hashOfConfig":"68"},{"size":1081,"mtime":1609765765011,"results":"87","hashOfConfig":"68"},{"size":437,"mtime":1609166539051,"results":"88","hashOfConfig":"68"},{"size":1035,"mtime":1609734831881,"results":"89","hashOfConfig":"68"},{"size":357,"mtime":1609166722039,"results":"90","hashOfConfig":"68"},{"size":1908,"mtime":1609824599211,"results":"91","hashOfConfig":"68"},{"size":1386,"mtime":1609754621577,"results":"92","hashOfConfig":"68"},{"size":112,"mtime":1609166522950,"results":"93","hashOfConfig":"68"},{"size":488,"mtime":1609166534818,"results":"94","hashOfConfig":"68"},{"size":900,"mtime":1609166523057,"results":"95","hashOfConfig":"68"},{"size":1273,"mtime":1609816189089,"results":"96","hashOfConfig":"68"},{"size":3550,"mtime":1609765889789,"results":"97","hashOfConfig":"68"},{"size":7172,"mtime":1609822705226,"results":"98","hashOfConfig":"68"},{"size":791,"mtime":1609577342508,"results":"99","hashOfConfig":"68"},{"size":1711,"mtime":1609765756708,"results":"100","hashOfConfig":"68"},{"size":1192,"mtime":1609765722922,"results":"101","hashOfConfig":"68"},{"size":823,"mtime":1609384125308,"results":"102","hashOfConfig":"68"},{"size":237,"mtime":1609765747694,"results":"103","hashOfConfig":"68"},{"size":598,"mtime":1609576204226,"results":"104","hashOfConfig":"68"},{"size":419,"mtime":1609765675505,"results":"105","hashOfConfig":"68"},{"size":9628,"mtime":1609813845179,"results":"106","hashOfConfig":"68"},{"size":3484,"mtime":1609765324585,"results":"107","hashOfConfig":"68"},{"size":2621,"mtime":1609765337337,"results":"108","hashOfConfig":"68"},{"size":7812,"mtime":1609765679956,"results":"109","hashOfConfig":"68"},{"size":4483,"mtime":1609765703343,"results":"110","hashOfConfig":"68"},{"size":3919,"mtime":1609765651397,"results":"111","hashOfConfig":"68"},{"size":657,"mtime":1609415702418,"results":"112","hashOfConfig":"68"},{"size":833,"mtime":1609765502856,"results":"113","hashOfConfig":"68"},{"size":8993,"mtime":1609765380823,"results":"114","hashOfConfig":"68"},{"size":5327,"mtime":1609765484337,"results":"115","hashOfConfig":"68"},{"size":4770,"mtime":1609765372007,"results":"116","hashOfConfig":"68"},{"size":759,"mtime":1609765790885,"results":"117","hashOfConfig":"68"},{"size":785,"mtime":1609471017010,"results":"118","hashOfConfig":"68"},{"size":1654,"mtime":1609765751467,"results":"119","hashOfConfig":"68"},{"size":1085,"mtime":1609765719970,"results":"120","hashOfConfig":"68"},{"size":460,"mtime":1609765726015,"results":"121","hashOfConfig":"68"},{"size":3251,"mtime":1609765329921,"results":"122","hashOfConfig":"68"},{"size":243,"mtime":1609765507088,"results":"123","hashOfConfig":"68"},{"size":631,"mtime":1609684964546,"results":"124","hashOfConfig":"68"},{"size":267,"mtime":1609571590315,"results":"125","hashOfConfig":"68"},{"size":6102,"mtime":1609765664700,"results":"126","hashOfConfig":"68"},{"size":6430,"mtime":1609765669220,"results":"127","hashOfConfig":"68"},{"size":1884,"mtime":1609765352093,"results":"128","hashOfConfig":"68"},{"size":2888,"mtime":1609765341038,"results":"129","hashOfConfig":"68"},{"size":4026,"mtime":1609765497120,"results":"130","hashOfConfig":"68"},{"size":2719,"mtime":1609822584899,"results":"131","hashOfConfig":"68"},{"size":3122,"mtime":1609681990706,"results":"132","hashOfConfig":"68"},{"size":1455,"mtime":1609733803036,"results":"133","hashOfConfig":"68"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},"6vwivd",{"filePath":"137","messages":"138","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"136"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"136"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"136"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"183"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"188","messages":"189","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"136"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"199","messages":"200","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"136"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"220","messages":"221","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"222","usedDeprecatedRules":"136"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"229","usedDeprecatedRules":"136"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"232","messages":"233","errorCount":5,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"238","usedDeprecatedRules":"136"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"243","usedDeprecatedRules":"136"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"256","usedDeprecatedRules":"136"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"265","usedDeprecatedRules":"136"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"268","usedDeprecatedRules":"136"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"271","usedDeprecatedRules":"136"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"274","usedDeprecatedRules":"136"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"279","messages":"280","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"281","usedDeprecatedRules":"183"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"284","usedDeprecatedRules":"136"},"C:\\Users\\Ja'far Shodiq YB\\Documents\\jafar\\DIT\\training\\Telkom Athon #1 Programmer\\Coursera\\2020-12-15 TA\\frontend-ta\\src\\index.js",[],["285","286"],"C:\\Users\\Ja'far Shodiq YB\\Documents\\jafar\\DIT\\training\\Telkom Athon #1 Programmer\\Coursera\\2020-12-15 TA\\frontend-ta\\src\\App.js",["287"],"import './App.css';\nimport { SnackbarProvider } from 'notistack';\nimport React, { Component } from 'react';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport Main from './pages/main';\nimport { store } from './store/configureStore';\n\n// const store = store();\nconst notistackRef = React.createRef()\nclass App extends Component {\n  constructor(props) {\n    super(props);\n  }\n  render() {\n    return (\n      <SnackbarProvider dense={false} maxSnack={5}  ref={notistackRef} onClose={(event, reason, key) => {\n        if (reason === 'clickaway') {\n          notistackRef.current.closeSnackbar(key)\n        }\n      }}>\n        <Provider store={store}>\n          <BrowserRouter>\n            <div className=\"App\">\n              <Main />\n            </div>\n          </BrowserRouter>\n        </Provider>\n      </SnackbarProvider>\n    );\n  }\n}\n\nexport default App;\n","C:\\Users\\Ja'far Shodiq YB\\Documents\\jafar\\DIT\\training\\Telkom Athon #1 Programmer\\Coursera\\2020-12-15 TA\\frontend-ta\\src\\reportWebVitals.js",[],"C:\\Users\\Ja'far Shodiq YB\\Documents\\jafar\\DIT\\training\\Telkom Athon #1 Programmer\\Coursera\\2020-12-15 TA\\frontend-ta\\src\\services\\user.service.js",[],"C:\\Users\\Ja'far Shodiq YB\\Documents\\jafar\\DIT\\training\\Telkom Athon #1 Programmer\\Coursera\\2020-12-15 TA\\frontend-ta\\src\\services\\check.service.js",[],"C:\\Users\\Ja'far Shodiq YB\\Documents\\jafar\\DIT\\training\\Telkom Athon #1 Programmer\\Coursera\\2020-12-15 TA\\frontend-ta\\src\\services\\activity.service.js",[],"C:\\Users\\Ja'far Shodiq YB\\Documents\\jafar\\DIT\\training\\Telkom Athon #1 Programmer\\Coursera\\2020-12-15 TA\\frontend-ta\\src\\pages\\main.js",[],"C:\\Users\\Ja'far Shodiq YB\\Documents\\jafar\\DIT\\training\\Telkom Athon #1 Programmer\\Coursera\\2020-12-15 TA\\frontend-ta\\src\\pages\\router\\ProtectedRoute.js",[],"C:\\Users\\Ja'far Shodiq YB\\Documents\\jafar\\DIT\\training\\Telkom Athon #1 Programmer\\Coursera\\2020-12-15 TA\\frontend-ta\\src\\store\\configureStore.js",[],"C:\\Users\\Ja'far Shodiq YB\\Documents\\jafar\\DIT\\training\\Telkom Athon #1 Programmer\\Coursera\\2020-12-15 TA\\frontend-ta\\src\\utils\\history.js",[],"C:\\Users\\Ja'far Shodiq YB\\Documents\\jafar\\DIT\\training\\Telkom Athon #1 Programmer\\Coursera\\2020-12-15 TA\\frontend-ta\\src\\pages\\login\\LoginPage.js",["288","289"],"import { Avatar, Box, Button, IconButton, InputAdornment, TextField, Typography, withStyles } from '@material-ui/core';\r\nimport { deepOrange } from '@material-ui/core/colors';\r\nimport { Visibility, VisibilityOff } from '@material-ui/icons';\r\nimport jwt from 'jsonwebtoken';\r\nimport queryString from 'query-string';\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { compose } from 'redux';\r\nimport Copyright from '../../parts/Footer/Copyright';\r\nimport { userActions } from '../../store/action/user.actions';\r\n\r\nconst styles = (theme) => ({\r\n    root: {\r\n        height: '100vh',\r\n      },\r\n      image: {\r\n        backgroundImage: 'url(https://tlt.co.id/assets/images/upload/20181018_151829.jpg)',\r\n        backgroundRepeat: 'no-repeat',\r\n        backgroundColor:\r\n          theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[900],\r\n        backgroundSize: 'cover',\r\n        backgroundPosition: 'center',\r\n      },\r\n      square: {\r\n        color: theme.palette.getContrastText(deepOrange[500]),\r\n        backgroundColor: '#D4232C',\r\n        margin: \"0 auto\",\r\n      },\r\n      paper: {\r\n        margin: theme.spacing(8, 4),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n      },\r\n      avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n      },\r\n      form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1),\r\n      },\r\n      submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n        width: '50%',\r\n      },\r\n      textField: {\r\n        marginLeft: theme.spacing(1),\r\n        marginRight: theme.spacing(1),\r\n        width: '50%',\r\n      },\r\n  });\r\nclass LoginPage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    // reset login status\r\n    this.state = {\r\n      username: \"\",\r\n      password: \"\",\r\n      showPassword: false,\r\n      submitted: false,\r\n    };\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleClickShowPassword = this.handleClickShowPassword.bind(this);\r\n    this.handleMouseDownPassword = this.handleMouseDownPassword.bind(this);\r\n  }\r\n\r\n  handleChange(e) {\r\n    const { name, value } = e.target;\r\n    this.setState({ [name]: value });\r\n  }\r\n\r\n  handleSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    this.setState({ submitted: true });\r\n    const { username, password } = this.state;\r\n    if (username && password) {\r\n      this.props.login(username, password);\r\n    }\r\n  }\r\n  googleLogIn(){\r\n    window.open(\"http://localhost:3000/users/auth/google\",\"_self\");\r\n  }\r\n  componentWillMount(){\r\n    if(this.props.location.pathname.length>7){\r\n      let params = queryString.parse(this.props.location.pathname.substr(7,this.props.location.pathname.length));\r\n      if(params.token){\r\n        jwt.verify(params.token, '12345-67890-09876-54321', function(err, decoded) {\r\n          if (err) {\r\n            window.open(\"/login\",\"_self\")            \r\n          } else if (decoded) {\r\n          localStorage.setItem('token', JSON.stringify(params.token));\r\n          window.open(\"/\",\"_self\")\r\n        }\r\n        });\r\n      \r\n      }     \r\n    } else this.props.logout();\r\n  }\r\n\r\n  handleClickShowPassword(e) {\r\n    this.setState({\r\n      showPassword: !this.state.showPassword,\r\n    });\r\n    // setValues({ ...values, showPassword: !values.showPassword });\r\n  }\r\n\r\n  handleMouseDownPassword(event) {\r\n    event.preventDefault();\r\n  }\r\n\r\n  render() {\r\n    const { loggingIn } = this.props;\r\n    const { username, password, submitted, showPassword } = this.state;\r\n    const { classes } = this.props;\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"container-fluid vh-100\">\r\n          <div\r\n            className=\"row h-100\"\r\n            style={{ display: \"flex\", \"flex-wrap\": \"wrap\" }}\r\n          >\r\n            <div\r\n              className={classes.image + \" d-none d-sm-block col-sm-6 \"}\r\n            ></div>\r\n            <div className=\"col-sm-6 col-xs-12  my-auto justify-content-center\">\r\n              <Avatar variant=\"square\" className={classes.square}>\r\n                D\r\n              </Avatar>\r\n              <Typography component=\"h1\" variant=\"h5\" className=\"mt-2\">\r\n                Login\r\n              </Typography>\r\n              <form name=\"form\" onSubmit={this.handleSubmit}>\r\n                <div\r\n                  className={\r\n                    \"form-group w-100\" +\r\n                    (submitted && !username ? \" has-error\" : \"\")\r\n                  }\r\n                >\r\n                  {submitted && !username && (\r\n                    <div className=\"help-block\">Username is required</div>\r\n                  )}\r\n                  <TextField\r\n                    //   variant=\"outlined\"\r\n                    className={classes.textField}\r\n                    margin=\"normal\"\r\n                    required\r\n                    // fullWidth\r\n                    id=\"username\"\r\n                    label=\"Username\"\r\n                    name=\"username\"\r\n                    autoComplete=\"username\"\r\n                    value={username}\r\n                    onChange={this.handleChange}\r\n                    autoFocus\r\n                  />\r\n                </div>\r\n                <div\r\n                  className={\r\n                    \"form-group\" + (submitted && !password ? \" has-error\" : \"\")\r\n                  }\r\n                >\r\n\r\n                  {submitted && !password && (\r\n                    <div className=\"help-block\">Password is required</div>\r\n                  )}\r\n                  <TextField\r\n                    margin=\"normal\"\r\n                    required\r\n                    // fullWidth\r\n                    className={classes.textField}\r\n                    label=\"Password\"\r\n                    type={showPassword ? \"text\" : \"password\"}\r\n                    name=\"password\"\r\n                    value={password}\r\n                    onChange={this.handleChange}\r\n                    // fullWidth={true}\r\n                    InputProps={{\r\n                      endAdornment: (\r\n                        <InputAdornment position=\"end\">\r\n                          <IconButton\r\n                            aria-label=\"toggle password visibility\"\r\n                            onClick={this.handleClickShowPassword}\r\n                            onMouseDown={this.handleMouseDownPassword}\r\n                            edge=\"end\"\r\n                          >\r\n                            {showPassword ? <Visibility /> : <VisibilityOff />}\r\n                          </IconButton>\r\n                        </InputAdornment>\r\n                      ),\r\n                    }}\r\n                    // labelWidth={70}\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <Button\r\n                    type=\"submit\"\r\n                    // fullWidth\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    className={classes.submit}\r\n                  >\r\n                    LogIn\r\n                  </Button>\r\n\r\n                  <div className=\"container mb-4\">\r\n                    <div className=\"row\">\r\n                      <div className=\"col-md-3 offset-md-3 mt-2 \">\r\n                        <Link to=\"#\" variant=\"body2\">\r\n                          Forgot password?\r\n                        </Link>\r\n                      </div>\r\n                      <div className=\"col-md-3 mt-2\">\r\n                        <Link\r\n                          to=\"/register\"\r\n                          variant=\"body2\"\r\n                          className=\"text-center\"\r\n                        >\r\n                          {\"Register\"}\r\n                        </Link>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <Typography component=\"span\" variant=\"subtitle1\" className=\"mt-4\">\r\n                    Or Login Using\r\n                  </Typography>\r\n                  <div className=\"container\">\r\n                    <IconButton\r\n                      variant=\"text\"\r\n                      // size=\"small\"\r\n                      color=\"default\"\r\n                      onClick={this.googleLogIn}\r\n                      className=\"mt-2\"\r\n                    >\r\n                      <img height=\"45px\" width=\"45px\" src=\"1google.png\" />\r\n                    </IconButton>\r\n                    <IconButton\r\n                      variant=\"text\"\r\n                      // size=\"small\"\r\n                      color=\"default\"\r\n                      // onClick={this.googleLogIn}\r\n                      className=\"mt-2\"\r\n                    >\r\n                      <Avatar src=\"facebook.png\" />\r\n                    </IconButton>\r\n                    <IconButton\r\n                      variant=\"text\"\r\n                      // size=\"small\"\r\n                      color=\"default\"\r\n                      // onClick={this.googleLogIn}\r\n                      className=\"mt-2\"\r\n                      >\r\n                    \r\n                      <Avatar src=\"twitter.png\" />\r\n                    </IconButton>\r\n                  </div>\r\n                  <Box mt={5}>\r\n                    <Copyright />\r\n                  </Box>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return state\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  login: userActions.login,\r\n  logout: userActions.logout,\r\n};\r\nexport default compose(\r\n    connect(\r\n      mapStateToProps,\r\n      // mapStateToPropsToProps,\r\n      mapDispatchToProps // or put null here if you do not have actions to dispatch\r\n    ),\r\n    withStyles(styles)\r\n  )(LoginPage);","C:\\Users\\Ja'far Shodiq YB\\Documents\\jafar\\DIT\\training\\Telkom Athon #1 Programmer\\Coursera\\2020-12-15 TA\\frontend-ta\\src\\store\\action\\alert.actions.js",[],"C:\\Users\\Ja'far Shodiq YB\\Documents\\jafar\\DIT\\training\\Telkom Athon #1 Programmer\\Coursera\\2020-12-15 TA\\frontend-ta\\src\\pages\\home\\Home.js",["290"],"import { Button, Snackbar, withStyles } from \"@material-ui/core\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport InputIcon from \"@material-ui/icons/Input\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport * as _ from \"lodash\";\r\nimport * as moment from \"moment\";\r\nimport React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FireworkSpinner } from \"react-spinners-kit\";\r\nimport { compose } from \"redux\";\r\nimport { ActivityCard } from \"../../components/Card/ActivityCard\";\r\nimport { ProfileCard } from \"../../components/Card/ProfileCard\";\r\nimport { DialogConfirmation } from \"../../components/Dialog/DialogConfirmation\";\r\nimport { SpinnerWrapper } from \"../../components/Wrapper/Wrapper\";\r\nimport TopBar from \"../../parts/Header/TopBar\";\r\nimport { postsActions } from \"../../store/action/post.actions\";\r\nimport { storiesActions } from \"../../store/action/stories.actions\";\r\nimport ChatBar from \"./../../parts/ChatBar/ChatBar\";\r\nimport { Content } from \"./../../parts/Content/Feed/Content\";\r\nimport Content2 from \"./../../parts/Content/Side/Content2\";\r\nimport Copyright from \"./../../parts/Footer/Copyright\";\r\nimport { activityActions } from \"./../../store/action/activity.actions\";\r\nimport { checkActions } from \"./../../store/action/check.actions\";\r\nimport { userActions } from \"./../../store/action/user.actions\";\r\nconst styles = (theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    //   maxWidth: '36ch',\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  inline: {\r\n    display: \"inline\",\r\n  },\r\n  flex: {\r\n    display: \"flex\",\r\n  },\r\n  paper: {\r\n    position: \"absolute\",\r\n    width: theme.spacing.unit * 50,\r\n    backgroundColor: theme.palette.background.paper,\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing.unit * 4,\r\n  },\r\n  media: {\r\n    width: 151,\r\n  },\r\n  controls: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    paddingLeft: theme.spacing(1),\r\n    paddingBottom: theme.spacing(1),\r\n  },\r\n  details: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n  },\r\n  content: {\r\n    flex: \"1 0 auto\",\r\n  },\r\n});\r\nclass HomePage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const data = this.props;\r\n    this.state = {\r\n      user: data.authentication.payload,\r\n      modal: false,\r\n      modalType: \"\",\r\n      activity: null,\r\n      ids: {\r\n        parentId: \"\",\r\n        childId: \"\",\r\n      },\r\n      checkProfile: false,\r\n    };\r\n    this.handleOnClose.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.getAllStories();\r\n    this.props.getAllposts();\r\n    this.props.getCheckin(this.props.authentication.payload._id);\r\n    this.forceUpdate();\r\n    window.scrollTo(0, 0);\r\n    // if(this.state.user)\r\n    let cek = _.some(this.state.user, (value, i) => {\r\n      if (i != \"password\")\r\n        return value === undefined || value === \"\" || value === null;\r\n    });\r\n    this.setState({ checkProfile: cek });\r\n  }\r\n\r\n  checkin() {\r\n    return (e) => this.props.checkin(this.props.authentication.payload._id);\r\n  }\r\n  checkout() {\r\n    return (e) => this.props.checkout(this.props.authentication.payload._id);\r\n  }\r\n\r\n  handleOnClose(type) {\r\n    this.setState({\r\n      checkProfile: false,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { check, classes } = this.props;\r\n    const { user } = this.state;\r\n    let title, date;\r\n    if (\r\n      check.item &&\r\n      (check.item.lastCheckOut === null ||\r\n        (!moment(check.item.lastCheckOut).isSame(moment(), \"day\") &&\r\n          moment(check.item.lastCheckIn).isSame(moment(), \"day\")))\r\n    ) {\r\n      title = \"Last Check In\";\r\n      date = moment(check.item.lastCheckIn).format(\"DD/MM/YYYY HH:mm\");\r\n    } else if (\r\n      check.item &&\r\n      (check.item.lastCheckOut ||\r\n        (!moment(check.item.lastCheckIn).isSame(moment(), \"day\") &&\r\n          !moment(check.item.lastCheckOut).isSame(moment(), \"day\")))\r\n    ) {\r\n      title = \"Last Check Out\";\r\n      date = moment(check.item.lastCheckOut).format(\"DD/MM/YYYY HH:mm\");\r\n    } else {\r\n      title = \"\";\r\n      date = \"\";\r\n    }\r\n    let isNotCheckinToday = true;\r\n    if (check)\r\n      isNotCheckinToday =\r\n        _.isEmpty(check) ||\r\n        (check &&\r\n          check.item &&\r\n          !moment(check.item.lastCheckIn).isSame(moment(), \"day\"));\r\n\r\n    return (\r\n      <div>\r\n        <TopBar />\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-3 mt-4\">\r\n              <ProfileCard {...user} readOnly={true} />\r\n              <Card className={\" mt-4\"} variant=\"outlined\">\r\n                <div className=\"pl-4 pt-2\">\r\n                  <Typography component=\"h6\" variant=\"h6\" align=\"left\">\r\n                    {title}\r\n                  </Typography>\r\n                  <Typography\r\n                    variant=\"subtitle2\"\r\n                    color=\"textSecondary\"\r\n                    align=\"left\"\r\n                  >\r\n                    {date}\r\n                  </Typography>\r\n                </div>\r\n                {/* <InfoTitle>50 Days of Premium!</InfoTitle>\r\n                    <InfoSubtitle>Get it before 01.01.2020</InfoSubtitle> */}\r\n                <div className=\"float-right pr-2 pb-2 mt-2\">\r\n                  <SpinnerWrapper\r\n                    style={{\r\n                      position: \"absolute\",\r\n                      zIndex: \"1\",\r\n                      paddingLeft: \"8%\",\r\n                      \"margin-top\": \"-5%\",\r\n                    }}\r\n                  >\r\n                    <FireworkSpinner\r\n                      size={60}\r\n                      color=\"red\"\r\n                      loading={isNotCheckinToday}\r\n                    />\r\n                  </SpinnerWrapper>\r\n                  <Button\r\n                    variant=\"outlined\"\r\n                    color=\"secondary\"\r\n                    className={classes.button}\r\n                    startIcon={<InputIcon />}\r\n                    size=\"small\"\r\n                    style={{ zIndex: 2 }}\r\n                    onClick={\r\n                      _.isEmpty(check) ||\r\n                      (check &&\r\n                        check.item &&\r\n                        !moment(check.item.lastCheckIn).isSame(moment(), \"day\"))\r\n                        ? this.checkin()\r\n                        : this.checkout()\r\n                    }\r\n                    disabled={\r\n                      check.item &&\r\n                      moment(check.item.lastCheckIn).isSame(moment(), \"day\") &&\r\n                      moment(check.item.lastCheckOut).isSame(moment(), \"day\")\r\n                    }\r\n                  >\r\n                    {_.isEmpty(check) ||\r\n                    (check &&\r\n                      check.item &&\r\n                      !moment(check.item.lastCheckIn).isSame(moment(), \"day\"))\r\n                      ? \"CHECKIN\"\r\n                      : \"CHECKOUT\"}\r\n                  </Button>\r\n                </div>\r\n              </Card>\r\n\r\n              <ActivityCard {...this.state} />\r\n            </div>\r\n            <div className=\"col-md-6 mt-4\">\r\n              <Content {...this.state} />\r\n            </div>\r\n            <div className=\"col-md-3 mt-4\">\r\n              <Content2 {...this.props} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <ChatBar />\r\n        <Copyright />\r\n        <DialogConfirmation\r\n          open={this.state.checkProfile}\r\n          onClose={() => this.handleOnClose(\"updateProfile\")}\r\n          title=\"Your profile is not complete. Do you want to update?\"\r\n          confirmation={{ yes: \"next\", no: \"skip\" }}\r\n          type=\"link\"\r\n        />\r\n        {isNotCheckinToday && (\r\n          <Snackbar\r\n            open={\r\n              _.isEmpty(check) ||\r\n              (check &&\r\n                check.item &&\r\n                !moment(check.item.lastCheckIn).isSame(moment(), \"day\"))\r\n            }\r\n            autoHideDuration={1500}\r\n            style={{ zIndex: 1 }}\r\n            // onClose={this.handleSnackBar}\r\n          >\r\n            <Alert onClose={this.handleSnackBar} severity=\"error\">\r\n              Hari ini anda belum Check In. Silahkan Check In terlebih dahulu!\r\n            </Alert>\r\n            {/* {alert.message} */}\r\n          </Snackbar>\r\n          //   <div className={`alert ${alert.type}`}>{alert.message}</div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapState(state) {\r\n  return state;\r\n}\r\n\r\nconst actionCreators = {\r\n  getUsers: userActions.getAll,\r\n  deleteUser: userActions.delete,\r\n  getCheckin: checkActions.getCheckin,\r\n  getAllStories: storiesActions.getAllStories,\r\n  getAllposts: postsActions.getAllposts,\r\n  checkin: checkActions.checkin,\r\n  checkout: checkActions.checkout,\r\n  addActivity: activityActions.addActivity,\r\n  deleteActivity: activityActions.deleteActivity,\r\n};\r\n\r\n// Show loading when any of GET_TODOS_REQUEST, GET_USER_REQUEST is active\r\n// const connectedHomePage = connect(mapState, actionCreators)(HomePage);\r\n// export { connectedHomePage as HomePage };\r\nexport default compose(\r\n  connect(\r\n    mapState,\r\n    // mapStateToProps,\r\n    actionCreators // or put null here if you do not have actions to dispatch\r\n  ),\r\n  withStyles(styles)\r\n)(HomePage);\r\n","C:\\Users\\Ja'far Shodiq YB\\Documents\\jafar\\DIT\\training\\Telkom Athon #1 Programmer\\Coursera\\2020-12-15 TA\\frontend-ta\\src\\store\\action\\user.actions.js",[],"C:\\Users\\Ja'far Shodiq YB\\Documents\\jafar\\DIT\\training\\Telkom Athon #1 Programmer\\Coursera\\2020-12-15 TA\\frontend-ta\\src\\store\\action\\check.actions.js",[],"C:\\Users\\Ja'far Shodiq YB\\Documents\\jafar\\DIT\\training\\Telkom Athon #1 Programmer\\Coursera\\2020-12-15 TA\\frontend-ta\\src\\store\\action\\activity.actions.js",[],"C:\\Users\\Ja'far Shodiq YB\\Documents\\jafar\\DIT\\training\\Telkom Athon #1 Programmer\\Coursera\\2020-12-15 TA\\frontend-ta\\src\\utils\\baseURL.js",[],"C:\\Users\\Ja'far Shodiq YB\\Documents\\jafar\\DIT\\training\\Telkom Athon #1 Programmer\\Coursera\\2020-12-15 TA\\frontend-ta\\src\\utils\\auth-header.js",[],"C:\\Users\\Ja'far Shodiq YB\\Documents\\jafar\\DIT\\training\\Telkom Athon #1 Programmer\\Coursera\\2020-12-15 TA\\frontend-ta\\src\\store\\reducer\\index.js",[],"C:\\Users\\Ja'far Shodiq YB\\Documents\\jafar\\DIT\\training\\Telkom Athon #1 Programmer\\Coursera\\2020-12-15 TA\\frontend-ta\\src\\store\\reducer\\activity.reducer.js",[],"C:\\Users\\Ja'far Shodiq YB\\Documents\\jafar\\DIT\\training\\Telkom Athon #1 Programmer\\Coursera\\2020-12-15 TA\\frontend-ta\\src\\store\\reducer\\alert.reducer.js",[],"C:\\Users\\Ja'far Shodiq YB\\Documents\\jafar\\DIT\\training\\Telkom Athon #1 Programmer\\Coursera\\2020-12-15 TA\\frontend-ta\\src\\store\\reducer\\users.reducer.js",["291"],"import { userTypes } from '../type/user.type'\n\nexport function users(state = {}, action) {\n  switch (action.type) {\n    case userTypes.GETUSER_REQUEST:\n      return {\n        loading: true\n      };\n    case userTypes.GETUSER_SUCCESS:\n      return {\n        items: action.payload\n      };\n    case userTypes.GETUSER_FAILURE:\n      return { \n        error: action.error\n      };\n      case userTypes.PROFILECHANGE_REQUEST:\n      return {\n        loading: true\n      };\n    case userTypes.PROFILECHANGE_SUCCESS:\n      return {\n        ...state,loading:false,items: action.payload[0]\n      };\n    case userTypes.PROFILECHANGE_FAILURE:\n      return { \n        error: action.error\n      };\n      case userTypes.CHANGEPASSWORD_REQUEST:\n        return {\n          loading: true\n        };\n      case userTypes.CHANGEPASSWORD_SUCCESS:\n        return {\n          ...state,item: action.payload\n        };\n      case userTypes.CHANGEPASSWORD_SUCCESS:\n        return { \n          error: action.error\n        };\n    default:\n      return state\n  }\n}",["292","293"],"C:\\Users\\Ja'far Shodiq YB\\Documents\\jafar\\DIT\\training\\Telkom Athon #1 Programmer\\Coursera\\2020-12-15 TA\\frontend-ta\\src\\store\\reducer\\register.reducer.js",[],"C:\\Users\\Ja'far Shodiq YB\\Documents\\jafar\\DIT\\training\\Telkom Athon #1 Programmer\\Coursera\\2020-12-15 TA\\frontend-ta\\src\\store\\reducer\\auth.reducer.js",["294"],"C:\\Users\\Ja'far Shodiq YB\\Documents\\jafar\\DIT\\training\\Telkom Athon #1 Programmer\\Coursera\\2020-12-15 TA\\frontend-ta\\src\\store\\reducer\\check.reducer.js",["295"],"import { checkTypes } from \"../type/check.type\";\r\n\r\nexport function check(state = {}, action) {\r\n  switch (action.type) {\r\n    case checkTypes.CHECKIN_REQUEST:\r\n      return {\r\n        checkining: true,\r\n        // user: action.payload\r\n      };\r\n    case checkTypes.CHECKIN_SUCCESS:\r\n      return {\r\n        // checkin: true,\r\n        ...state,item: action.payload\r\n      };\r\n    case checkTypes.CHECKIN_FAILURE:\r\n      return {};\r\n    // case checkTypes.LOGOUT:\r\n    //   return {};\r\n    case checkTypes.GETCHECKIN_REQUEST:\r\n      // add 'deleting:true' property to user being deleted\r\n\r\n      return {\r\n        loading: true,\r\n      };\r\n      case checkTypes.GETCHECKIN_REQUEST:\r\n      return {\r\n      };\r\n    case checkTypes.GETCHECKIN_SUCCESS:\r\n      return {\r\n        ...state,item: action.payload\r\n      };\r\n    case checkTypes.GETCHECKIN_FAILURE:\r\n      // remove 'deleting:true' property and add 'deleteError:[error]' property to user\r\n      return {};\r\n      case checkTypes.CHECKOUT_REQUEST:\r\n      return {\r\n        checkouting: true,\r\n        // user: action.payload\r\n      };\r\n    case checkTypes.CHECKOUT_SUCCESS:\r\n      return {\r\n        // checkout: true,\r\n        ...state,\r\n        item: action.payload\r\n      };\r\n    case checkTypes.CHECKOUT_FAILURE:\r\n      return {};\r\n    // case checkTypes.LOGOUT:\r\n    //   return {};\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","C:\\Users\\Ja'far Shodiq YB\\Documents\\jafar\\DIT\\training\\Telkom Athon #1 Programmer\\Coursera\\2020-12-15 TA\\frontend-ta\\src\\store\\type\\alert.type.js",[],"C:\\Users\\Ja'far Shodiq YB\\Documents\\jafar\\DIT\\training\\Telkom Athon #1 Programmer\\Coursera\\2020-12-15 TA\\frontend-ta\\src\\store\\type\\activity.type.js",[],"C:\\Users\\Ja'far Shodiq YB\\Documents\\jafar\\DIT\\training\\Telkom Athon #1 Programmer\\Coursera\\2020-12-15 TA\\frontend-ta\\src\\store\\type\\check.type.js",[],"C:\\Users\\Ja'far Shodiq YB\\Documents\\jafar\\DIT\\training\\Telkom Athon #1 Programmer\\Coursera\\2020-12-15 TA\\frontend-ta\\src\\store\\type\\user.type.js",[],"C:\\Users\\Ja'far Shodiq YB\\Documents\\jafar\\DIT\\training\\Telkom Athon #1 Programmer\\Coursera\\2020-12-15 TA\\frontend-ta\\src\\pages\\register\\Register.js",["296"],"import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\nimport { userActions } from \"../../store/action/user.actions\";\r\nimport { Avatar, Typography, withStyles} from \"@material-ui/core\";\r\nimport { deepOrange, green } from \"@material-ui/core/colors\";\r\nimport {FormRegister} from \"../../components/Form/FormRegister\";\r\n\r\nconst styles = (theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  image: {\r\n    backgroundImage:\r\n      \"url(https://tlt.co.id/assets/images/upload/20181018_151829.jpg)\",\r\n    backgroundRepeat: \"no-repeat\",\r\n    backgroundColor:\r\n      theme.palette.type === \"light\"\r\n        ? theme.palette.grey[50]\r\n        : theme.palette.grey[900],\r\n    backgroundSize: \"cover\",\r\n    backgroundPosition: \"center\",\r\n  },\r\n  square: {\r\n    color: theme.palette.getContrastText(deepOrange[500]),\r\n    backgroundColor: \"#D4232C\",\r\n    margin: \"0 auto\",\r\n  },\r\n  rounded: {\r\n    color: \"#fff\",\r\n    backgroundColor: green[500],\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing(8, 4),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n    width: \"100%\",\r\n  },\r\n});\r\nclass RegisterPage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n   \r\n  }\r\n\r\n  handleChange(event) {\r\n    const { name, value } = event.target;\r\n    const { user } = this.state;\r\n    this.setState({\r\n      user: {\r\n        ...user,\r\n        [name]: value,\r\n      },\r\n    });\r\n  }\r\n\r\n  render() {\r\n    // const { registering } = this.props;\r\n    // const { user, submitted } = this.state;\r\n    const { classes } = this.props;\r\n    return (\r\n      <div>\r\n        <div className=\"container-fluid vh-100\">\r\n          <div\r\n            className=\"row h-100\"\r\n            style={{ display: \"flex\", \"flex-wrap\": \"wrap\" }}\r\n          >\r\n            <div\r\n              className={classes.image + \" d-none d-sm-block col-sm-6 \"}\r\n            ></div>\r\n            <div className=\"col-md-6 my-auto text-center\">\r\n              <div className=\"container\">\r\n                <div className=\"row\">\r\n                  <div className=\"col-12\">\r\n                    <Avatar variant=\"square\" className={classes.square}>\r\n                      D\r\n                    </Avatar>\r\n                  </div>\r\n                  <div className=\"col-12\">\r\n                    <Typography component=\"h1\" variant=\"h5\" className=\"mt-2\">\r\n                      Register\r\n                    </Typography>\r\n                  </div>\r\n                </div>\r\n                <FormRegister isRegister={true} hide={false}  />\r\n                {/* isi component formRegister */}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const { registering } = state.registration;\r\n  return { registering };\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  register: userActions.register,\r\n};\r\n\r\n// const connectedRegisterPage = connect(mapStateToProps, mapDispatchToProps)(RegisterPage);\r\nexport default compose(\r\n  connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps // or put null here if you do not have actions to dispatch\r\n  ),\r\n  withStyles(styles)\r\n)(RegisterPage);\r\n// export { connectedRegisterPage as RegisterPage };\r\n","C:\\Users\\Ja'far Shodiq YB\\Documents\\jafar\\DIT\\training\\Telkom Athon #1 Programmer\\Coursera\\2020-12-15 TA\\frontend-ta\\src\\pages\\profile\\Profile.js",[],"C:\\Users\\Ja'far Shodiq YB\\Documents\\jafar\\DIT\\training\\Telkom Athon #1 Programmer\\Coursera\\2020-12-15 TA\\frontend-ta\\src\\store\\reducer\\stories.reducer.js",[],"C:\\Users\\Ja'far Shodiq YB\\Documents\\jafar\\DIT\\training\\Telkom Athon #1 Programmer\\Coursera\\2020-12-15 TA\\frontend-ta\\src\\store\\action\\stories.actions.js",[],"C:\\Users\\Ja'far Shodiq YB\\Documents\\jafar\\DIT\\training\\Telkom Athon #1 Programmer\\Coursera\\2020-12-15 TA\\frontend-ta\\src\\services\\stories.service.js",[],"C:\\Users\\Ja'far Shodiq YB\\Documents\\jafar\\DIT\\training\\Telkom Athon #1 Programmer\\Coursera\\2020-12-15 TA\\frontend-ta\\src\\store\\type\\stories.type.js",[],"C:\\Users\\Ja'far Shodiq YB\\Documents\\jafar\\DIT\\training\\Telkom Athon #1 Programmer\\Coursera\\2020-12-15 TA\\frontend-ta\\src\\store\\action\\loading.selector.js",[],"C:\\Users\\Ja'far Shodiq YB\\Documents\\jafar\\DIT\\training\\Telkom Athon #1 Programmer\\Coursera\\2020-12-15 TA\\frontend-ta\\src\\store\\reducer\\loading.reducer.js",[],"C:\\Users\\Ja'far Shodiq YB\\Documents\\jafar\\DIT\\training\\Telkom Athon #1 Programmer\\Coursera\\2020-12-15 TA\\frontend-ta\\src\\parts\\Footer\\Copyright.js",[],"C:\\Users\\Ja'far Shodiq YB\\Documents\\jafar\\DIT\\training\\Telkom Athon #1 Programmer\\Coursera\\2020-12-15 TA\\frontend-ta\\src\\components\\Form\\FormRegister.js",["297","298","299"],"C:\\Users\\Ja'far Shodiq YB\\Documents\\jafar\\DIT\\training\\Telkom Athon #1 Programmer\\Coursera\\2020-12-15 TA\\frontend-ta\\src\\components\\Card\\ActivityCard.js",["300"],"import { Button, Card, CardHeader, Divider, makeStyles, Paper, Tab, Tabs } from '@material-ui/core';\r\nimport { deepOrange } from '@material-ui/core/colors';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { userActions } from '../../store/action/user.actions';\r\nimport { DialogAddEdit } from '../Dialog/DialogAddEdit';\r\nimport { MockActivityList } from '../List/MockActivity';\r\nimport { a11yProps, TabPanel } from '../Tabs/Tabs';\r\nimport ActivityList from './../List/ActivtiyList';\r\n\r\nfunction ActivityCard(props) {\r\n  const { check } = props;\r\n  const [value, setValue] = useState(0);\r\n  const [open,setOpen]=useState(false)\r\n  const classes = styles();\r\n  \r\n const handleCloseModal = () => {\r\n    setOpen(false);\r\n  };\r\n  const handleOpenModal = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n  return (\r\n    <div>\r\n      <Card className={classes.root + \" mt-4\"} variant=\"outlined\">\r\n        <CardHeader title=\"Activity\" />\r\n        <Divider/>\r\n        <Paper square>\r\n          <Tabs\r\n            value={value}\r\n            onChange={handleChange}\r\n            aria-label=\"simple tabs example\"\r\n            indicatorColor=\"primary\"\r\n          >\r\n            <Tab className={classes.tab} label=\"TO DO\" {...a11yProps(0)} />\r\n            <Tab className={classes.tab} label=\"DOING\" {...a11yProps(1)} />\r\n            <Tab className={classes.tab} label=\"DONE\" {...a11yProps(2)} />\r\n          </Tabs>\r\n          <TabPanel\r\n            style={{ maxHeight: 300, overflow: \"auto\" }}\r\n            value={value}\r\n            index={0}\r\n          >\r\n        <MockActivityList/>\r\n\r\n            <ActivityList {...props} status=\"todo\" />\r\n          </TabPanel>\r\n          <TabPanel value={value} index={1}>\r\n            <ActivityList {...props} status=\"doing\" />\r\n          </TabPanel>\r\n          <TabPanel value={value} index={2}>\r\n            <ActivityList {...props} status=\"done\" />\r\n          </TabPanel>\r\n          <Button\r\n            variant=\"outlined\"\r\n            color=\"primary\"\r\n            className={classes.button + \" mt-4 mb-4\"}\r\n            startIcon={<AddIcon />}\r\n            onClick={(e) => handleOpenModal(\"add\")}\r\n            disabled={!check.item}\r\n          >\r\n            Add Activity\r\n          </Button>\r\n          <DialogAddEdit\r\n            open={open}\r\n            onClose={(e) => handleCloseModal(e)}\r\n            type=\"add\"\r\n            user={props.user._id}\r\n          />\r\n        </Paper>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\nconst styles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    //   maxWidth: '36ch',\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  media: {\r\n    height: 0,\r\n    paddingTop: \"56.25%\", // 16:9\r\n    borderRadius: \"50%\",\r\n    margin: \"22%\",\r\n    marginTop: \"10%\",\r\n    marginBottom: \"10%\",\r\n  },\r\n  input: {\r\n    display: \"none\",\r\n  },\r\n  tab: {\r\n    minWidth: \"6em\",\r\n    width: \"6em\",\r\n  },\r\n  square: {\r\n    color: theme.palette.getContrastText(deepOrange[500]),\r\n    backgroundColor: \"#D4232C\",\r\n    margin: \"0 auto\",\r\n  },\r\n}));\r\n\r\nfunction mapStateToProps(state) {\r\n  return state;\r\n}\r\nconst mapDispatchToProps = {\r\n  changeImage: userActions.changeImage,\r\n  updateUser: userActions.updateUser,\r\n};\r\n\r\nconst connectedProfile = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(ActivityCard);\r\nexport { connectedProfile as ActivityCard };\r\n","C:\\Users\\Ja'far Shodiq YB\\Documents\\jafar\\DIT\\training\\Telkom Athon #1 Programmer\\Coursera\\2020-12-15 TA\\frontend-ta\\src\\components\\Card\\ProfileCard.js",[],"C:\\Users\\Ja'far Shodiq YB\\Documents\\jafar\\DIT\\training\\Telkom Athon #1 Programmer\\Coursera\\2020-12-15 TA\\frontend-ta\\src\\parts\\Header\\TopBar.js",[],"C:\\Users\\Ja'far Shodiq YB\\Documents\\jafar\\DIT\\training\\Telkom Athon #1 Programmer\\Coursera\\2020-12-15 TA\\frontend-ta\\src\\parts\\Stories\\Stories.js",["301"],"import { Avatar, Badge, Dialog, IconButton, makeStyles, Typography, withStyles } from '@material-ui/core';\r\nimport * as moment from 'moment';\r\nimport React, { useEffect } from 'react';\r\nimport ReactInstaStories from 'react-insta-stories';\r\nimport { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport { activityActions } from '../../store/action/activity.actions';\r\n\r\nconst contentStyle = {\r\n  // background: 'salmon',\r\n  // width: \"100%\",\r\n  padding: 20,\r\n  color: \"white\",\r\n  backgroundRepeat: \"no-repeat\",\r\n  backgroundSize: \"contain\",\r\n  backgroundPosition: \"center\",\r\n};\r\n\r\nconst SmallAvatar = withStyles((theme) => ({\r\n  root: {\r\n    width: 15,\r\n    height: 15,\r\n    // border: `2px solid ${theme.palette.background.paper}`,\r\n  },\r\n}))(Avatar);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  input: {\r\n    display: \"none\",\r\n    zIndex:1001,\r\n    position: \"absolute\"\r\n  },\r\n}));\r\n\r\nfunction Stories(props) {\r\n  const classes = useStyles()\r\n  const { onClose, selectedValue, open } = props;\r\n  const handleClose = () => {\r\n    onClose(selectedValue);\r\n  };\r\n\r\n  const onChange = () => {\r\n    alert(\"tes\");\r\n  };\r\n  const stories = props.userStories.stories.map((value, i) => {\r\n    return {\r\n      content: ({ action, isPaused }) => {\r\n        return (\r\n          <div\r\n            style={{ backgroundImage: `url(${value.url})`, ...contentStyle }}\r\n            className=\"w-100\"\r\n          >\r\n            <div className=\"d-flex\">\r\n            <input accept=\"image/*\" className={classes.input} id=\"icon-button-file\" type=\"file\" onChange={onChange}  />\r\n            <label htmlFor={props.userStories.user.username ===\r\n                  props.authentication.payload.username?\"icon-button-file\":''} style={{display:'flex',marginBottom:0}}>\r\n            \r\n              <IconButton\r\n                className=\"p-0\"\r\n                aria-label=\"upload picture\" \r\n                component=\"span\"\r\n                // onClick={addStory}\r\n                key={i}\r\n                style={{ zIndex: 1000 }}\r\n                disabled={\r\n                  props.userStories.user.username !==\r\n                  props.authentication.payload.username\r\n                }\r\n              >\r\n                <Badge\r\n                  overlap=\"circle\"\r\n                  anchorOrigin={{\r\n                    vertical: \"bottom\",\r\n                    horizontal: \"right\",\r\n                  }}\r\n                  badgeContent={\r\n                    props.userStories.user.username ===\r\n                      props.authentication.payload.username && (\r\n                      <SmallAvatar alt=\"Add\" src=\"add-icon.png\" />\r\n                    )\r\n                  }\r\n                >\r\n                  <Avatar src={ props.userStories.user.username === props.authentication.payload.username ?props.authentication.payload.image:props.userStories.user.image} />\r\n                </Badge>\r\n              </IconButton>\r\n            </label>\r\n            <div className=\"d-block\">\r\n              <Typography variant=\"h6\" color=\"initial\" className=\"ml-2\">\r\n                {props.userStories.user.username}\r\n              </Typography>\r\n              <Typography variant=\"caption\" color=\"initial\" className=\"ml-2\">\r\n                {value.storiesDate?moment(value.storiesDate).fromNow():''}\r\n              </Typography>\r\n            </div>\r\n            </div>\r\n          </div>\r\n        );\r\n      },\r\n    };\r\n  });\r\n  return (\r\n    <Dialog\r\n      onClose={handleClose}\r\n      aria-labelledby=\"simple-dialog-title\"\r\n      open={open}\r\n    >\r\n      <ReactInstaStories\r\n        // stories={props.userStories.stories}\r\n        loop\r\n        stories={stories}\r\n        defaultInterval={1500}\r\n        width={432}\r\n        height={768}\r\n        onAllStoriesEnd={handleClose}\r\n        keyboardNavigation={true}\r\n        // onStoryEnd={(s, st) => console.log('story ended', s, st)}\r\n      />\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return state;\r\n}\r\nconst mapDispatchToProps = {\r\n  addActivity: activityActions.addActivity,\r\n  updateActivity: activityActions.updateActivity,\r\n  deleteActivity: activityActions.deleteActivity,\r\n};\r\n\r\n// const connectedDialog = connect(mapStateToProps, mapDispatchToProps)(Stories);\r\n// export { connectedDialog as Stories };\r\nexport default compose(\r\n  connect(\r\n    mapStateToProps,\r\n    // mapStateToProps,\r\n    mapDispatchToProps// or put null here if you do not have actions to dispatch\r\n  ),\r\n  withStyles(useStyles)\r\n)(Stories);\r\n","C:\\Users\\Ja'far Shodiq YB\\Documents\\jafar\\DIT\\training\\Telkom Athon #1 Programmer\\Coursera\\2020-12-15 TA\\frontend-ta\\src\\parts\\ChatBar\\ChatBar.js",[],"C:\\Users\\Ja'far Shodiq YB\\Documents\\jafar\\DIT\\training\\Telkom Athon #1 Programmer\\Coursera\\2020-12-15 TA\\frontend-ta\\src\\components\\Tabs\\tabs.js",["302","303","304","305","306"],"C:\\Users\\Ja'far Shodiq YB\\Documents\\jafar\\DIT\\training\\Telkom Athon #1 Programmer\\Coursera\\2020-12-15 TA\\frontend-ta\\src\\components\\Tabs\\Tabs.js",[],"C:\\Users\\Ja'far Shodiq YB\\Documents\\jafar\\DIT\\training\\Telkom Athon #1 Programmer\\Coursera\\2020-12-15 TA\\frontend-ta\\src\\components\\List\\ActivtiyList.js",["307"],"import {\r\n  Avatar,\r\n  IconButton,\r\n  List,\r\n  ListItem,\r\n  ListItemAvatar,\r\n  ListItemSecondaryAction,\r\n  ListItemText,\r\n  makeStyles,\r\n  Menu,\r\n  MenuItem,\r\n  Tooltip,\r\n  Typography,\r\n  withStyles,\r\n} from '@material-ui/core';\r\nimport { deepOrange } from '@material-ui/core/colors';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\r\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\r\nimport * as _ from 'lodash';\r\nimport * as moment from 'moment';\r\nimport { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\n\r\nimport { activityActions } from '../../store/action/activity.actions';\r\nimport { DialogAddEdit } from '../Dialog/DialogAddEdit';\r\nimport { DialogConfirmation } from '../Dialog/DialogConfirmation';\r\n\r\n function ActivityList(props) {\r\n  const {check,status} = props\r\n  const [anchorEl, setAnchorEl] = useState({});\r\n  const classes = styles();\r\n  const [data, setData] = useState({\r\n    ids: {\r\n      parentId: \"\",\r\n      childId: \"\",\r\n    },\r\n    activity: {},\r\n    modal: {},\r\n    modalType: \"\",\r\n  });\r\n \r\n\r\n\r\n  const handleModal = (type, activity, parentId, childId) => {\r\n    setData({\r\n      ...data,\r\n      ids: {\r\n        ...data.parentId,\r\n        parentId: parentId,\r\n        ...data.childId,\r\n        childId: childId,\r\n      },\r\n      ...data.activity,\r\n      activity,\r\n      ...data.modal,\r\n      [type]: true,\r\n      modalType: type,\r\n    });\r\n\r\n  };\r\n  const handleCloseModal = (type) => {\r\n    setData({ ...data.modal, [type]: false });\r\n  };\r\n    let listActivities\r\n    if (check.item) {\r\n      listActivities = _.filter(check.item.activities,(value,i)=>{\r\n        return value.status === status\r\n        // check.item.activities_.pickBy(check.item.activities,props.status);\r\n      }) \r\n    }\r\n    const handleClickAnchor = (event, id) => {\r\n      setAnchorEl({ ...anchorEl, [id]: event.currentTarget });\r\n    };\r\n  \r\n    const handleCloseAnchor = (id) => {\r\n      setAnchorEl({ ...anchorEl, [id]: null });\r\n    };\r\n    const handleMoveStatus = (parentId,childId,activity,status,where) =>{\r\n      let body = {\r\n        parentId: parentId,\r\n        childId: childId,\r\n        activities: {\r\n          activity: activity,\r\n          status:'',\r\n        },\r\n      }\r\n      if (where==='forward'){\r\n        body.activities.status = status==='todo'?'doing':status==='doing'?'done':'done'\r\n      } else if (where==='back') {\r\n        body.activities.status = status==='done'?'doing':status==='doing'?'todo':'todo'\r\n      }\r\n      props.updateActivity(body)\r\n    }\r\n    return (\r\n      <div>\r\n\r\n      <List className=\"pt-0 mt-0\">\r\n        {check.item &&\r\n          listActivities.map((value, i) => {\r\n            return (\r\n              <div>\r\n                <ListItem\r\n                  button\r\n                  onClick={() =>\r\n                    handleModal(\r\n                      \"edit\",\r\n                      value.activity,\r\n                      check.item._id,\r\n                      value._id\r\n                    )\r\n                  }\r\n                >\r\n            <Tooltip title=\"Diarium\" placement=\"left\">\r\n\r\n                  <ListItemAvatar style={{ marginLeft: \"-2em\" }}>\r\n                    <Avatar\r\n                      variant=\"square\"\r\n                      className={classes.square + \" mr-2\"}\r\n                    >\r\n                      D\r\n                    </Avatar>\r\n                  </ListItemAvatar>\r\n                  </Tooltip>\r\n                  <ListItemText style={{ overflowWrap: \"anywhere\" }}>\r\n                    <Typography variant=\"body\" color=\"textPrimary\" className={classes.elipsis}>\r\n                      {value.activity}\r\n                    </Typography>\r\n                    <Typography variant=\"subtitle2\" color=\"textSecondary\" style={{width:'8em'}}>\r\n                    {\r\n                      value.createdDate\r\n                        ? moment(value.createdDate).format(\"DD/MM/YYYY HH:mm\")\r\n                        : \"-\"\r\n                    }\r\n                    </Typography>\r\n                  </ListItemText>\r\n\r\n                  <ListItemSecondaryAction\r\n                    style={{ display: \"flex\", left: \"10em\" }}\r\n                  >\r\n                    <IconButton\r\n                      aria-label=\"more\"\r\n                      aria-controls=\"long-menu\"\r\n                      aria-haspopup=\"true\"\r\n                      onClick={(e) => handleClickAnchor(e, value._id)}\r\n                    >\r\n                      <MoreVertIcon />\r\n                    </IconButton>\r\n                    <Menu\r\n                      id=\"long-menu\"\r\n                      anchorEl={anchorEl[value._id]}\r\n                      keepMounted\r\n                      open={anchorEl[value._id]}\r\n                      onClose={() => handleCloseAnchor(value._id)}\r\n                    >\r\n                      <MenuItem\r\n                        key={value._id}\r\n                        // selected={option === \"Pyxis\"}\r\n                        onClick={() => handleCloseAnchor(value._id)}\r\n                        // style={{background:status=='done'?'rgba(52, 52, 52, 0.2)':''}}\r\n                      >\r\n                        <IconButton\r\n                        onClick={(e) =>\r\n                          handleMoveStatus(check.item._id, value._id,value.activity,status,'forward')\r\n                        }\r\n                        style={{color:'#22AF25'}}\r\n                        hidden={status==='done'}\r\n                        // disabled={status==='done'}\r\n                        >\r\n                          <NavigateNextIcon />\r\n                        </IconButton>\r\n                      </MenuItem>\r\n                      <MenuItem\r\n                        key={value._id}\r\n                        // selected={option === \"Pyxis\"}\r\n                        onClick={() => handleCloseAnchor(value._id)}\r\n                        // style={{background:status=='done'?'rgba(52, 52, 52, 0.2)':''}}\r\n                      >\r\n                        <IconButton\r\n                        onClick={(e) =>\r\n                          handleMoveStatus(check.item._id, value._id,value.activity,status,'back')\r\n                          // alert('tobe continued')\r\n                        }\r\n                        style={{color:'#22AF25'}}\r\n                        hidden={status==='todo'}\r\n                        >\r\n                          <NavigateBeforeIcon />\r\n                        </IconButton>\r\n                      </MenuItem>\r\n                      <MenuItem\r\n                        key={value._id}\r\n                        // selected={option === \"Pyxis\"}\r\n                        onClick={() => handleCloseAnchor(value._id)}\r\n                      >\r\n                        <IconButton\r\n                          onClick={(e) =>\r\n                            handleModal(\"delete\", \"\", check.item._id, value._id)\r\n                          }\r\n                        >\r\n                          <DeleteIcon />\r\n                        </IconButton>\r\n                      </MenuItem>\r\n                    </Menu>\r\n                  </ListItemSecondaryAction>\r\n                </ListItem>\r\n              </div>\r\n            );\r\n          })}\r\n        <DialogAddEdit\r\n          open={data[data.modalType]&& data.modalType!=='delete'}\r\n          onClose={(e) => handleCloseModal(data.modalType)}\r\n          type={data.modalType}\r\n          activity={data.activity}\r\n          user={props.authentication.payload._id}\r\n          ids={data.ids}\r\n          status={status}\r\n        />\r\n        <DialogConfirmation\r\n          open={data[data.modalType]&& data.modalType=='delete'}\r\n          onClose={(e) => handleCloseModal(data.modalType)}\r\n          type={data.modalType}\r\n          activity={data.activity}\r\n          user={props.authentication.payload._id}\r\n          ids={data.ids}\r\n          status={status}\r\n        />\r\n      </List>\r\n      </div>\r\n    );\r\n  }\r\n  const styles = makeStyles((theme) => ({\r\n    root: {\r\n      width: \"100%\",\r\n      //   maxWidth: '36ch',\r\n      backgroundColor: theme.palette.background.paper,\r\n    },\r\n    tab: {\r\n      minWidth: \"6em\",\r\n      width: \"6em\",\r\n    },\r\n    square: {\r\n      color: theme.palette.getContrastText(deepOrange[500]),\r\n      backgroundColor: '#D4232C',\r\n      margin: \"0 auto\",\r\n    },\r\n    elipsis: {\r\n      whiteSpace: \"nowrap\",\r\n      width: \"8em\",\r\n      overflow: \"hidden\",\r\n      textOverflow: \"ellipsis\",\r\n      display:\"block\"\r\n    },\r\n  }));\r\n  function mapStateToProps(state) {\r\n    return state;\r\n  }\r\n  const mapDispatchToProps = {\r\n  \r\n    updateActivity : activityActions.updateActivity,\r\n  };\r\n  export default compose(\r\n    connect(\r\n      mapStateToProps,\r\n      // mapStateToPropsToProps,\r\n      mapDispatchToProps // or put null here if you do not have actions to dispatch\r\n    ),\r\n    withStyles(styles)\r\n  )(ActivityList);","C:\\Users\\Ja'far Shodiq YB\\Documents\\jafar\\DIT\\training\\Telkom Athon #1 Programmer\\Coursera\\2020-12-15 TA\\frontend-ta\\src\\components\\List\\MockActivity.js",[],"C:\\Users\\Ja'far Shodiq YB\\Documents\\jafar\\DIT\\training\\Telkom Athon #1 Programmer\\Coursera\\2020-12-15 TA\\frontend-ta\\src\\components\\Form\\PostFeed.js",["308","309","310"],"import { Button, Card, CardActions, CardContent, CardHeader, Grow, IconButton, TextField } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { PhotoCamera } from '@material-ui/icons';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { postsActions } from '../../store/action/post.actions';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    // maxWidth: '36ch',\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  inline: {\r\n    display: \"inline\",\r\n  },\r\n  media: {\r\n    height: 0,\r\n    paddingTop: \"56.25%\", // 16:9\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n    marginRight: 0,\r\n    marginLeft: 0,\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n    width: \"100%\",\r\n  },\r\n}));\r\n\r\nfunction PostFeed(props) {\r\n  const classes = useStyles();\r\n  \r\n  const [data, setData] = React.useState({\r\n        content: \"\",\r\n        image: \"\",\r\n    \r\n  });\r\n  const handlePost = (e) => {\r\n    e.preventDefault();\r\n    const formData = new FormData();\r\n    formData.append(\"file\", data.image);\r\n    let body = {\r\n        user : props.authentication.payload._id,\r\n        image : props.user.image?props.user.image:'',\r\n        posts : {\r\n            content : data.content,\r\n            image : data.image?formData:'',\r\n            createdDate : Date()\r\n        }\r\n    }\r\n    props.postFeed(body)\r\n    setData({content:\"\",image:\"\"})   \r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    // const()\r\n    setData((prevState) => ({\r\n        ...prevState,\r\n          [name]: value,\r\n    }));\r\n  };\r\n\r\n  const selectImage = (e) => {\r\n    const files = e.target.files[0];\r\n\r\n    setData((prevState)=>({\r\n        ...prevState,\r\n            image:files\r\n    }))\r\n  };\r\n  return (\r\n    <div>\r\n      <Grow in={true}>\r\n        <Card variant=\"outlined\">\r\n          <CardHeader id=\"form-Card-title\">Add Activity</CardHeader>\r\n          <CardContent>\r\n            {/* <CardContentText>\r\n            To subscribe to this website, please enter your activity address here. We will send updates\r\n            occasionally.\r\n          </CardContentText> */}\r\n\r\n            <TextField\r\n              autoFocus\r\n              id=\"content\"\r\n              label=\"What Do You Think?\"\r\n              type=\"text\"\r\n              name=\"content\"\r\n              value={data.content}\r\n              onChange={handleChange}\r\n              fullWidth\r\n            />\r\n          </CardContent>\r\n          <CardActions className=\"mb-2 d-block\">\r\n            {/* <FormControl className={classes.formControl}>\r\n            <Select\r\n              labelId=\"demo-simple-select-placeholder-label-label\"\r\n              id=\"demo-simple-select-placeholder-label\"\r\n              value={10}\r\n              displayEmpty\r\n            >\r\n              <MenuItem value=\"\">\r\n                <em>None</em>\r\n              </MenuItem>\r\n              <MenuItem value={10}>Public</MenuItem>\r\n              <MenuItem value={30}>Close Friends</MenuItem>\r\n              <MenuItem value={20}>Private</MenuItem>\r\n            </Select>\r\n          </FormControl> */}\r\n          <div className=\"float-left mb-2\">\r\n            <input\r\n              accept=\"image/*\"\r\n              className=\"d-none\"\r\n              id=\"icon-button-file-upload\"\r\n              type=\"file\"\r\n              onChange={selectImage}\r\n            />\r\n            <label htmlFor=\"icon-button-file-upload\">\r\n              <IconButton\r\n                color=\"primary\"\r\n                aria-label=\"upload picture post\"\r\n                component=\"span\"\r\n              disabled={data.content===\"\"}\r\n              >\r\n                <PhotoCamera />\r\n              </IconButton>\r\n            </label>\r\n            <Typography variant=\"caption\" color=\"initial\">\r\n              {data.image?data.image.name:''}\r\n            </Typography>\r\n          </div>\r\n            <Button\r\n              //   onClick={this.handleSubmit}\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              startIcon={<CreateIcon />}\r\n              className=\"float-right mb-2\"\r\n              onClick={handlePost}\r\n              disabled={data.content===\"\"}\r\n            >\r\n              Post\r\n            </Button>\r\n          </CardActions>\r\n        </Card>\r\n      </Grow>\r\n    </div>\r\n  );\r\n}\r\nfunction mapStateToProps(state) {\r\n  return state;\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  postFeed : postsActions.postFeed\r\n};\r\n\r\nconst connectedPostFeed = connect(mapStateToProps, mapDispatchToProps)(PostFeed);\r\nexport { connectedPostFeed as PostFeed };\r\n","C:\\Users\\Ja'far Shodiq YB\\Documents\\jafar\\DIT\\training\\Telkom Athon #1 Programmer\\Coursera\\2020-12-15 TA\\frontend-ta\\src\\store\\reducer\\posts.reducer.js",[],"C:\\Users\\Ja'far Shodiq YB\\Documents\\jafar\\DIT\\training\\Telkom Athon #1 Programmer\\Coursera\\2020-12-15 TA\\frontend-ta\\src\\store\\type\\posts.type.js",[],"C:\\Users\\Ja'far Shodiq YB\\Documents\\jafar\\DIT\\training\\Telkom Athon #1 Programmer\\Coursera\\2020-12-15 TA\\frontend-ta\\src\\store\\action\\post.actions.js",[],"C:\\Users\\Ja'far Shodiq YB\\Documents\\jafar\\DIT\\training\\Telkom Athon #1 Programmer\\Coursera\\2020-12-15 TA\\frontend-ta\\src\\services\\posts.service.js",[],"C:\\Users\\Ja'far Shodiq YB\\Documents\\jafar\\DIT\\training\\Telkom Athon #1 Programmer\\Coursera\\2020-12-15 TA\\frontend-ta\\src\\services\\uploadImage.service.js",[],"C:\\Users\\Ja'far Shodiq YB\\Documents\\jafar\\DIT\\training\\Telkom Athon #1 Programmer\\Coursera\\2020-12-15 TA\\frontend-ta\\src\\components\\Card\\FeedCard.js",["311"],"import {\r\n  Avatar,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  CardHeader,\r\n  CardMedia,\r\n  Grow,\r\n  IconButton,\r\n  makeStyles,\r\n  TextField,\r\n  Typography,\r\n} from '@material-ui/core';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport ShareIcon from '@material-ui/icons/Share';\r\nimport * as moment from 'moment';\r\nimport { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { postsActions } from '../../store/action/post.actions';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    // maxWidth: '36ch',\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  inline: {\r\n    display: \"inline\",\r\n  },\r\n  media: {\r\n    height: 0,\r\n    paddingTop: \"56.25%\", // 16:9\r\n  },\r\n}));\r\nfunction FeedCard(props) {\r\n  const classes = useStyles()\r\n  return (\r\n    <div>\r\n      {props.posts &&props.posts.user && props.posts.user.map((value, i) => {\r\n        return (\r\n          <Grow in={true}>\r\n            <Card className={classes.root + \" mt-4 mb-4\"} variant=\"outlined\">\r\n              <CardHeader\r\n                avatar={                    \r\n                    <Avatar src={value.user.image?value.user.image:'person.jpg'} aria-label=\"recipe\" className={classes.avatar}/>\r\n                }\r\n                action={\r\n                  <IconButton aria-label=\"settings\">\r\n                    <MoreVertIcon />\r\n                  </IconButton>\r\n                }\r\n                title={value.user.username}\r\n                subheader={moment(value.lastUpdate).fromNow()}\r\n                className=\"text-left\"\r\n              />\r\n              <CardContent>\r\n                <Typography variant=\"h5\" color=\"textPrimary\" component=\"p\" align=\"left\">\r\n                  {value.posts.content}\r\n                </Typography>\r\n              </CardContent>\r\n              <CardMedia\r\n                className={value.posts.image?classes.media:\"\"}\r\n                image={value.posts.image?value.posts.image:\"\"}\r\n                title={value.posts.content}\r\n                square\r\n              />\r\n              <CardActions disableSpacing className=\"float-right\">\r\n                <IconButton aria-label=\"add to favorites\">\r\n                  <FavoriteIcon />\r\n                </IconButton>\r\n                <IconButton aria-label=\"share\">\r\n                  <ShareIcon />\r\n                </IconButton>\r\n              </CardActions>\r\n              <div className=\"container mb-4\">\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  margin=\"dense\"\r\n                  id=\"name\"\r\n                  label=\"Add a comment..\"\r\n                  type=\"comment\"\r\n                  name=\"comment\"\r\n                  //   value={activity}\r\n                  //   onChange={this.handleChange}\r\n                  fullWidth\r\n                />\r\n              </div>\r\n            </Card>\r\n          </Grow>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return state;\r\n}\r\nconst mapDispatchToProps = {\r\n  getAllPosts:postsActions.getAllPosts\r\n};\r\n\r\nconst connectedProfile = connect(mapStateToProps, mapDispatchToProps)(FeedCard);\r\nexport { connectedProfile as FeedCard };\r\n","C:\\Users\\Ja'far Shodiq YB\\Documents\\jafar\\DIT\\training\\Telkom Athon #1 Programmer\\Coursera\\2020-12-15 TA\\frontend-ta\\src\\components\\Wrapper\\Wrapper.js",[],"C:\\Users\\Ja'far Shodiq YB\\Documents\\jafar\\DIT\\training\\Telkom Athon #1 Programmer\\Coursera\\2020-12-15 TA\\frontend-ta\\src\\utils\\handleResponse.js",[],"C:\\Users\\Ja'far Shodiq YB\\Documents\\jafar\\DIT\\training\\Telkom Athon #1 Programmer\\Coursera\\2020-12-15 TA\\frontend-ta\\src\\utils\\dispatchSelector.js",[],"C:\\Users\\Ja'far Shodiq YB\\Documents\\jafar\\DIT\\training\\Telkom Athon #1 Programmer\\Coursera\\2020-12-15 TA\\frontend-ta\\src\\parts\\Content\\Feed\\Content.js",["312"],"import { Badge, Card } from '@material-ui/core';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { FeedCard } from '../../../components/Card/FeedCard';\r\nimport { PostFeed } from '../../../components/Form/PostFeed';\r\nimport { storiesActions } from '../../../store/action/stories.actions';\r\nimport { userActions } from '../../../store/action/user.actions';\r\nimport Stories from '../../Stories/Stories';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    // maxWidth: '36ch',\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  inline: {\r\n    display: \"inline\",\r\n  },\r\n  media: {\r\n    height: 0,\r\n    paddingTop: \"56.25%\", // 16:9\r\n  },\r\n  input: {\r\n    display: \"none\",\r\n  },\r\n  storiesWrap:{\r\n    display: \"flex\",\r\n    // justifyContent: space-around,\r\n    minWidth: '35em',\r\n    position: \"relative\",\r\n    overflowX: \"auto\",\r\n    whiteSpace: \"nowrap\",\r\n  },\r\n  stories: {\r\n    margin: \"10px\",\r\n    width: \"60px\",\r\n    height: \"60px\",\r\n    // border:\"5px solid\"\r\n  },\r\n  storiesBorder: {\r\n    border: \"3px solid\",\r\n    borderColor: \"#3F51B5\",\r\n  },\r\n}));\r\n\r\nconst SmallAvatar = withStyles((theme) => ({\r\n  root: {\r\n    width: 22,\r\n    height: 22,\r\n    border: `2px solid ${theme.palette.background.paper}`,\r\n  },\r\n}))(Avatar);\r\nfunction Content(props) {\r\n  const classes = useStyles();\r\n  const [modalOpen, setModalOpen] = React.useState({});\r\n  const findMyStories = (props && props.stories && props.stories.user)?  props.stories.user.filter((value,i)=>{\r\n    return value.user.username === props.authentication.payload.username\r\n  }):[]\r\n  const handleClickOpen = (username) => {\r\n    if(findMyStories.length>0 ||username !==props.authentication.payload.username){\r\n      setModalOpen({ ...modalOpen, [username]: true });\r\n    }\r\n  };\r\n\r\n  const handleClose = (username) => {\r\n    setModalOpen({ ...modalOpen, [username]: false });\r\n  };\r\n\r\n  const onChange = (e) => {\r\n    e.preventDefault();\r\n    const files = e.target.files[0];\r\n    // props.changeImage(formData);\r\n      let body = {\r\n        user : props.authentication.payload._id,\r\n        image : props.user.image?props.user.image:'',\r\n        stories:{\r\n          image:files?files:'',\r\n          url:'',\r\n          storiesDate:Date()\r\n        }\r\n      }\r\n      props.postStories(body)\r\n      handleClose(props.authentication.payload.username)\r\n  };\r\n  return (\r\n    <div>\r\n      <Card variant=\"outlined\" className={\" mb-4\"}>\r\n        <div className={classes.storiesWrap + \" float-left\"}>\r\n          <div style={{ display: \"inline-grid\" }}>\r\n            <input\r\n              accept=\"image/*\"\r\n              className={classes.input}\r\n              id=\"icon-button-file\"\r\n              type=\"file\"\r\n              onChange={onChange}\r\n            />\r\n            <label\r\n              htmlFor={findMyStories.length <= 0 ? \"icon-button-file\" : \"\"}\r\n              style={{ display: \"flex\", marginBottom: 0 }}\r\n            >\r\n              <IconButton\r\n                className=\"p-0\"\r\n                color=\"primary\"\r\n                aria-label=\"upload picture\"\r\n                component=\"span\"\r\n                onClick={() => handleClickOpen(props.user.username)}\r\n              >\r\n                <Badge\r\n                  overlap=\"circle\"\r\n                  anchorOrigin={{\r\n                    vertical: \"bottom\",\r\n                    horizontal: \"right\",\r\n                  }}\r\n                  badgeContent={\r\n                    findMyStories.length <= 0 ? (\r\n                      <SmallAvatar alt=\"Add\" src=\"add-icon.png\" />\r\n                    ) : (\r\n                      \"\"\r\n                    )\r\n                  }\r\n                >\r\n                  <Avatar\r\n                    src={props.user && props.user.image ? props.user.image : \"person.jpg\"}\r\n                    className={[classes.stories, (findMyStories.length <= 0?\" \":classes.storiesBorder)]}\r\n\r\n                  />\r\n                </Badge>\r\n              </IconButton>\r\n            </label>\r\n\r\n            <Typography variant=\"caption\" color=\"initial\" className=\"mb-2\">\r\n              {props.user.username}\r\n            </Typography>\r\n          </div>\r\n          {props &&\r\n            props.stories &&\r\n            props.stories.user &&\r\n            props.stories.user.map((value, i) => {\r\n              return (\r\n                <div\r\n                  style={{ display: \"inline-grid\" }}\r\n                  key={i}\r\n                  hidden={value.user.username === props.user.username}\r\n                >\r\n                  <IconButton\r\n                    className=\"p-0\"\r\n                    onClick={() => handleClickOpen(value.user.username)}\r\n                    key={i}\r\n                  >\r\n                    <Avatar\r\n                      src={value.image ? value.image : \"person.jpg\"}\r\n                      className={[classes.stories, classes.storiesBorder]}\r\n                    />\r\n                  </IconButton>\r\n                  <Typography variant=\"caption\" color=\"initial\" className=\"mb-2\">\r\n                    {value.user.username}\r\n                  </Typography>\r\n                  <Stories\r\n                    open={modalOpen[value.user.username]}\r\n                    onClose={() => handleClose(value.user.username)}\r\n                    userStories={value}\r\n                  />\r\n                </div>\r\n              );\r\n            })}\r\n        </div>\r\n      </Card>\r\n\r\n      <PostFeed {...props}/>\r\n      <FeedCard {...props}/>\r\n\r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return state;\r\n}\r\nconst mapDispatchToProps = {\r\n  getAllStories: storiesActions.getAllStories,\r\n  changeImage : userActions.changeImage,\r\n  postStories : storiesActions.postStories\r\n};\r\n\r\nconst connectedStories = connect(mapStateToProps, mapDispatchToProps)(Content);\r\nexport { connectedStories as Content };\r\n","C:\\Users\\Ja'far Shodiq YB\\Documents\\jafar\\DIT\\training\\Telkom Athon #1 Programmer\\Coursera\\2020-12-15 TA\\frontend-ta\\src\\parts\\Content\\Side\\Content2.js",["313"],"import { Card, CardActions, CardContent, CardHeader, Chip } from '@material-ui/core';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport * as _ from 'lodash';\r\nimport React from 'react';\r\nimport { RingSpinner } from 'react-spinners-kit';\r\n\r\nimport { SpinnerWrapper } from '../../../components/Wrapper/Wrapper';\r\n\r\nconst hashtagRegex = require(\"hashtag-regex\");\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    // maxWidth: '36ch',\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  inline: {\r\n    display: \"inline\",\r\n  },\r\n  media: {\r\n    height: 0,\r\n    paddingTop: \"56.25%\", // 16:9\r\n  },\r\n  chips: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    flexWrap: \"wrap\",\r\n    \"& > *\": {\r\n      margin: theme.spacing(0.5),\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function Content2(props) {\r\n  const classes = useStyles();\r\n  const regex = hashtagRegex();\r\n  let match;\r\n  let find = {};\r\n  if(props.posts && props.posts.user){\r\n    props.posts.user.map((value, i) => {\r\n      while ((match = regex.exec(value.posts.content))) {\r\n        const hashtag = match[0];\r\n        if (!_.isEmpty(find) && find[hashtag]) {\r\n          find[hashtag].count = find[hashtag].count + 1;\r\n          // find[hashtag].count = find[hashtag].count++;\r\n        } else {\r\n          find[hashtag] = {\r\n            hashtag: hashtag,\r\n            count: 1,\r\n          };\r\n        }\r\n      }\r\n    });\r\n    \r\n  }\r\n  let data = []\r\n    data = _.slice(_.orderBy(_.toArray(_.forOwn(find)), ['count'], ['desc']),0,5);\r\n  return (\r\n    <div>\r\n      <Card className={classes.root + \"d-flex\"} variant=\"outlined\">\r\n        <CardHeader title=\"Trending #Hashtags\" />\r\n        <Divider/>\r\n        <CardContent>\r\n          <div className={classes.chips}>\r\n            {data &&\r\n              data.map((value, i) => {\r\n                return (\r\n                  <Chip\r\n                    color=\"primary\"\r\n                    label={value.hashtag}\r\n                    component=\"a\"\r\n                    href=\"#\"\r\n                    clickable\r\n                  />\r\n                );\r\n              })}\r\n          </div>\r\n        </CardContent>\r\n        <CardActions></CardActions>\r\n      </Card>\r\n      <Card className={classes.root + \"d-flex mt-4\"} variant=\"outlined\">\r\n        <CardHeader title=\"You May like\" />\r\n        <Divider/>\r\n        <CardContent>\r\n          <List className={classes.root}>\r\n            <ListItem alignItems=\"flex-start\">\r\n              <ListItemAvatar>\r\n                <Avatar alt=\"Remy Sharp\" src=\"/static/images/avatar/1.jpg\" />\r\n              </ListItemAvatar>\r\n              <ListItemText\r\n                primary=\"Amoeba\"\r\n                secondary={\r\n                  <React.Fragment>\r\n                    <Typography\r\n                      component=\"span\"\r\n                      variant=\"body2\"\r\n                      className={classes.inline}\r\n                      color=\"textPrimary\"\r\n                    ></Typography>\r\n                    {\"12034 Likes\"}\r\n                  </React.Fragment>\r\n                }\r\n              />\r\n            </ListItem>\r\n            <Divider component=\"li\" />\r\n            <ListItem alignItems=\"flex-start\">\r\n              <ListItemAvatar>\r\n                <Avatar alt=\"Travis Howard\" src=\"/static/images/avatar/2.jpg\" />\r\n              </ListItemAvatar>\r\n              <ListItemText\r\n                primary=\"Telkom Athon\"\r\n                secondary={\r\n                  <React.Fragment>\r\n                    <Typography\r\n                      component=\"span\"\r\n                      variant=\"body2\"\r\n                      className={classes.inline}\r\n                      color=\"textPrimary\"\r\n                    ></Typography>\r\n                    {\"12334 Likes\"}\r\n                  </React.Fragment>\r\n                }\r\n              />\r\n            </ListItem>\r\n            <Divider component=\"li\" />\r\n          </List>\r\n        </CardContent>\r\n        <CardActions></CardActions>\r\n      </Card>\r\n\r\n      <Card className={classes.root + \"d-flex mt-4\"} variant=\"outlined\">\r\n        <div className=\"mt-4 mb-4\">\r\n        <div style={{position:\"relative\",display:\"flex\"}}>\r\n        <SpinnerWrapper className=\"ml-3 mt-1\">\r\n          <RingSpinner  className=\"ml-2\" size={25} color=\"#D4232C\" loading={true} />\r\n        </SpinnerWrapper>\r\n        <Typography\r\n          // component=\"span\"\r\n          variant=\"h5\"\r\n          className={classes.inline + \" ml-2\"}\r\n          color=\"textPrimary\"\r\n        >\r\n          Breaking News\r\n        </Typography>\r\n        </div>\r\n        </div>\r\n        <Divider component=\"li\" />\r\n        <List className={classes.root}>\r\n          <ListItem alignItems=\"flex-start\" button>\r\n            <ListItemAvatar>\r\n              <Avatar alt=\"Remy Sharp\" src=\"/static/images/avatar/1.jpg\" />\r\n            </ListItemAvatar>\r\n            <ListItemText\r\n              primary=\"Tim Eclipse juara 1 Telkom Athon\"\r\n              secondary={\r\n                <React.Fragment>\r\n                  <Typography\r\n                    component=\"span\"\r\n                    variant=\"body2\"\r\n                    className={classes.inline}\r\n                    color=\"textPrimary\"\r\n                  ></Typography>\r\n                </React.Fragment>\r\n              }\r\n            />\r\n          </ListItem>\r\n          <Divider component=\"li\" />\r\n          <ListItem alignItems=\"flex-start\">\r\n            <ListItemAvatar>\r\n              <Avatar alt=\"Travis Howard\" src=\"/static/images/avatar/2.jpg\" />\r\n            </ListItemAvatar>\r\n            <ListItemText\r\n              primary=\"Telkom Athon Batch 1 Selesai\"\r\n              secondary={\r\n                <React.Fragment>\r\n                  <Typography\r\n                    component=\"span\"\r\n                    variant=\"body2\"\r\n                    className={classes.inline}\r\n                    color=\"textPrimary\"\r\n                  ></Typography>\r\n                </React.Fragment>\r\n              }\r\n            />\r\n          </ListItem>\r\n        </List>\r\n      </Card>\r\n    </div>\r\n  );\r\n}","C:\\Users\\Ja'far Shodiq YB\\Documents\\jafar\\DIT\\training\\Telkom Athon #1 Programmer\\Coursera\\2020-12-15 TA\\frontend-ta\\src\\components\\Dialog\\DialogConfirmation.js",["314","315","316"],"import { Button, Dialog, DialogActions, DialogContent, DialogTitle } from '@material-ui/core';\r\nimport React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { activityActions } from '../../store/action/activity.actions';\r\nimport { history } from '../../utils/history';\r\n\r\nfunction DialogConfirmation(props) {\r\n  const handleSubmit = () =>{\r\n    if(props.type=='link'){\r\n      history.push('/profile')\r\n    } else if(props.type=='delete'){\r\n      let body ={\r\n        username: props.username,\r\n        parentId : props.ids.parentId,\r\n        childId : props.ids.childId,\r\n      }\r\n      props.deleteActivity(body)\r\n      props.onClose()\r\n    }\r\n  }\r\n    return (\r\n      <Dialog {...props}>\r\n        <DialogTitle id=\"form-dialog-title\">{props.title?props.title:'Are you sure to perform this action?'}</DialogTitle>\r\n        {/* Please mock your content */}\r\n        <form id=\"my-form-id\" onSubmit={handleSubmit}>\r\n          <DialogContent>\r\n            {/* <DialogContentText>{content}</DialogContentText> */}\r\n\r\n            {/* {props.type === \"delete\" ? \"\" : form} */}\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={props.onClose} color=\"primary\">\r\n              {props.confirmation&&props.confirmation.no?props.confirmation.no:'No'}\r\n            </Button>\r\n            <Button onClick={handleSubmit} variant=\"contained\" color=\"primary\">\r\n              {props.confirmation&&props.confirmation.yes?props.confirmation.yes:'Yes'}\r\n            </Button>\r\n          </DialogActions>\r\n        </form>\r\n      </Dialog>\r\n    );\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return state;\r\n}\r\nconst mapDispatchToProps = {\r\n\r\n  deleteActivity : activityActions.deleteActivity\r\n\r\n};\r\n\r\nconst connectedDialog = connect(mapStateToProps, mapDispatchToProps)(DialogConfirmation);\r\nexport { connectedDialog as DialogConfirmation };\r\n","C:\\Users\\Ja'far Shodiq YB\\Documents\\jafar\\DIT\\training\\Telkom Athon #1 Programmer\\Coursera\\2020-12-15 TA\\frontend-ta\\src\\components\\Dialog\\DialogAddEdit.js",["317","318"],"import { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, TextField } from '@material-ui/core';\r\nimport React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { activityActions } from '../../store/action/activity.actions';\r\n\r\nfunction DialogAddEdit(props) {\r\n    const [activityTemp, setActivityTemp] = React.useState(null);\r\n    \r\n    const handleSubmit = (e) => {\r\n      e.preventDefault();\r\n      const { user, open } = props;\r\n      let body = {\r\n        user: user,\r\n        activities: {\r\n          activity: activityTemp,\r\n          status:props.status?props.status:'todo'\r\n        },\r\n      };\r\n      props.ids? body.parentId = props.ids.parentId:body.parentId ='' \r\n      props.ids?body.childId = props.ids.childId:body.childId = ''\r\n      if (props.type==='add') {\r\n        props.addActivity(body);\r\n      } else if(props.type==='edit'){\r\n        props.updateActivity(body)\r\n      }\r\n\r\n      if (props.open) {\r\n        handleClose();\r\n      }\r\n    }\r\n \r\n    const handleClose = () => {\r\n      props.onClose()\r\n    };\r\n    const handleChange = (e) =>{    \r\n      e.preventDefault()  \r\n      setActivityTemp(e.target.value);\r\n    }\r\n    const form = (\r\n      <TextField\r\n      autoFocus\r\n      margin=\"dense\"\r\n      id=\"activityTemp\"\r\n      label=\"Activity\"\r\n      type=\"activityTemp\"\r\n      name=\"activityTemp\"\r\n      value={activityTemp}\r\n      onChange={handleChange}\r\n      fullWidth\r\n    />\r\n    )\r\n    let title,content  \r\n    if(props.type ==='edit' || props.type ==='add' ){\r\n      title = props.activity!=null?'Edit Activity':'Add Activity'\r\n      content = props.activity!=null?`Recent Activity: ${props.activity}`:'Add your Daily activity here'\r\n    } \r\n    return (\r\n      <Dialog {...props}>\r\n        <DialogTitle id=\"form-dialog-title\">{title}</DialogTitle>\r\n        {/* Please mock your content */}\r\n        <form id=\"my-form-id\" onSubmit={handleSubmit}>\r\n          <DialogContent>\r\n            <DialogContentText>{content}</DialogContentText>\r\n\r\n            {props.type === \"delete\" ? \"\" : form}\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={props.onClose} color=\"primary\">\r\n              {props.type === \"delete\" ? \"No\" : \"Cancel\"}\r\n            </Button>\r\n            <Button onClick={handleSubmit} variant=\"contained\" color=\"primary\">\r\n              {props.type === \"delete\" ? \"Yes\" : \"Add\"}\r\n            </Button>\r\n          </DialogActions>\r\n        </form>\r\n      </Dialog>\r\n    );\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return state;\r\n}\r\nconst mapDispatchToProps = {\r\n\r\n  addActivity: activityActions.addActivity,\r\n  updateActivity : activityActions.updateActivity,\r\n  deleteActivity: activityActions.deleteActivity,\r\n};\r\n\r\nconst connectedDialog = connect(mapStateToProps, mapDispatchToProps)(DialogAddEdit);\r\nexport { connectedDialog as DialogAddEdit };\r\n","C:\\Users\\Ja'far Shodiq YB\\Documents\\jafar\\DIT\\training\\Telkom Athon #1 Programmer\\Coursera\\2020-12-15 TA\\frontend-ta\\src\\components\\Table\\TableProfileOverview.js",[],"C:\\Users\\Ja'far Shodiq YB\\Documents\\jafar\\DIT\\training\\Telkom Athon #1 Programmer\\Coursera\\2020-12-15 TA\\frontend-ta\\src\\components\\Form\\FormPassword.js",["319"],"C:\\Users\\Ja'far Shodiq YB\\Documents\\jafar\\DIT\\training\\Telkom Athon #1 Programmer\\Coursera\\2020-12-15 TA\\frontend-ta\\src\\components\\Form\\SecurityQuestions.js",["320","321","322","323"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport NativeSelect from '@material-ui/core/NativeSelect';\r\nimport { MenuItem } from '@material-ui/core';\r\nimport * as _ from 'lodash'\r\nimport { values } from 'lodash';\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n      margin: theme.spacing(1),\r\n      minWidth: 120,\r\n    },\r\n    selectEmpty: {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  }));\r\nexport default function SecurityQuestions() {\r\n    const classes = useStyles();\r\n    const [option, setOption] = React.useState([]);\r\n  \r\n    const handleChange = (event) => {\r\n    //   setOption(event.target.value);\r\n    const { name, value } = event.target;        \r\n      setOption((prevState) => ({\r\n        ...prevState,\r\n        [name]: value,\r\n      }));\r\n    //   \r\n    console.log(option)\r\n      \r\n    };\r\n\r\n\r\n  \r\n\r\n  return (\r\n    <div>\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-12\">\r\n              {[...Array(3)].map((x,y)=>{\r\n                  return (\r\n                    <FormControl\r\n                      className={classes.formControl}\r\n                      error={false}\r\n                      fullWidth\r\n                    >\r\n                      <InputLabel id=\"demo-simple-select-error-label\">\r\n                        {y}\r\n                      </InputLabel>\r\n                      <Select\r\n                        labelId=\"demo-simple-select-error-label\"\r\n                        id=\"demo-simple-select-error\"\r\n                        value={option[x]}\r\n                        onChange={handleChange}\r\n                        renderValue={(value) => `⚠️  - ${value}`}\r\n                        name={y}\r\n                      >\r\n                          {questions.map((value,i)=>{\r\n                              return (\r\n                                <MenuItem value={value.id}>{value.questions}</MenuItem>\r\n                              )\r\n                          })}\r\n                      </Select>\r\n                        {/* <FormHelperText>\r\n                          Error\r\n                        </FormHelperText> */}\r\n                    </FormControl>\r\n                  );\r\n              })}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst questions=[\r\n    {   id : '0',\r\n        questions:'Dimana pertama kali anda bertemu pasangan anda?',\r\n        disable:false,\r\n    },\r\n    {   id : '1',\r\n        questions:'Apa nama hewan peliharaan pertama anda?',\r\n        disable:false,\r\n    },\r\n    {   id : '2',\r\n        questions:'Siapa nama kekasih pertama anda?',\r\n        disable:false,\r\n    },\r\n    {   id : '3',\r\n        questions:'Dimana pertama kali anda bekerja?',\r\n        disable:false,\r\n    },\r\n    {   id : '4',\r\n        questions:'Apa klub olahraga favorit anda?',\r\n        disable:false,\r\n    }\r\n]\r\n","C:\\Users\\Ja'far Shodiq YB\\Documents\\jafar\\DIT\\training\\Telkom Athon #1 Programmer\\Coursera\\2020-12-15 TA\\frontend-ta\\src\\store\\middleware.js",["324","325","326"],"const BASE_URL = 'http://localhost:3000/'\r\n\r\nfunction callApi(endpoint, authenticated) {\r\n  \r\n  let token = localStorage.getItem('id_token') || null\r\n  let config = {}\r\n  \r\n  if(authenticated) {\r\n    if(token) {\r\n      config = {\r\n        headers: { 'Authorization': `Bearer ${token}` }\r\n      }\r\n    } else {\r\n      throw \"No token saved!\"\r\n    }\r\n  }\r\n  \r\n  return fetch(BASE_URL + endpoint, config)\r\n    .then(response =>\r\n      response.text()\r\n      .then(text => ({ text, response }))\r\n    ).then(({ text, response }) => {\r\n      if (!response.ok) {\r\n        return Promise.reject(text)\r\n      }\r\n      \r\n      return text\r\n    }).catch(err => console.log(err))\r\n}\r\n\r\nexport const CALL_API = Symbol('Call API')\r\n\r\nexport default store => next => action => {\r\n  \r\n  const callAPI = action[CALL_API]\r\n  \r\n  // So the middleware doesn't get applied to every single action\r\n  if (typeof callAPI === 'undefined') {\r\n    return next(action)\r\n  }\r\n  \r\n  let { endpoint, types, authenticated } = callAPI\r\n  \r\n  const [ requestType, successType, errorType ] = types\r\n  \r\n  // Passing the authenticated boolean back in our data will let us distinguish between normal and secret quotes\r\n  return callApi(endpoint, authenticated).then(\r\n    response =>\r\n      next({\r\n        response,\r\n        authenticated,\r\n        type: successType\r\n      }),\r\n    error => next({\r\n      error: error.message || 'There was an error.',\r\n      type: errorType\r\n    })\r\n  )\r\n}",{"ruleId":"327","replacedBy":"328"},{"ruleId":"329","replacedBy":"330"},{"ruleId":"331","severity":1,"message":"332","line":12,"column":3,"nodeType":"333","messageId":"334","endLine":14,"endColumn":4},{"ruleId":"335","severity":1,"message":"336","line":118,"column":13,"nodeType":"337","messageId":"338","endLine":118,"endColumn":22},{"ruleId":"339","severity":1,"message":"340","line":241,"column":23,"nodeType":"341","endLine":241,"endColumn":75},{"ruleId":"342","severity":1,"message":"343","line":88,"column":13,"nodeType":"344","messageId":"345","endLine":88,"endColumn":15},{"ruleId":"346","severity":1,"message":"347","line":37,"column":7,"nodeType":"348","messageId":"345","endLine":40,"endColumn":11},{"ruleId":"327","replacedBy":"349"},{"ruleId":"329","replacedBy":"350"},{"ruleId":"346","severity":1,"message":"347","line":43,"column":5,"nodeType":"348","messageId":"345","endLine":46,"endColumn":9},{"ruleId":"346","severity":1,"message":"347","line":25,"column":7,"nodeType":"348","messageId":"345","endLine":27,"endColumn":9},{"ruleId":"331","severity":1,"message":"332","line":56,"column":3,"nodeType":"333","messageId":"334","endLine":60,"endColumn":4},{"ruleId":"335","severity":1,"message":"351","line":51,"column":10,"nodeType":"337","messageId":"338","endLine":51,"endColumn":19},{"ruleId":"352","severity":1,"message":"353","line":69,"column":6,"nodeType":"354","endLine":69,"endColumn":8,"suggestions":"355"},{"ruleId":"356","severity":1,"message":"357","line":118,"column":15,"nodeType":"358","endLine":118,"endColumn":30},{"ruleId":"335","severity":1,"message":"359","line":4,"column":10,"nodeType":"337","messageId":"338","endLine":4,"endColumn":19},{"ruleId":"335","severity":1,"message":"359","line":3,"column":17,"nodeType":"337","messageId":"338","endLine":3,"endColumn":26},{"ruleId":"360","severity":2,"message":"361","line":13,"column":12,"nodeType":"362","endLine":13,"endColumn":15},{"ruleId":"360","severity":2,"message":"363","line":14,"column":14,"nodeType":"362","endLine":14,"endColumn":24},{"ruleId":"364","severity":2,"message":"365","line":22,"column":15,"nodeType":"337","messageId":"366","endLine":22,"endColumn":24},{"ruleId":"364","severity":2,"message":"365","line":23,"column":12,"nodeType":"337","messageId":"366","endLine":23,"endColumn":21},{"ruleId":"364","severity":2,"message":"365","line":24,"column":12,"nodeType":"337","messageId":"366","endLine":24,"endColumn":21},{"ruleId":"342","severity":1,"message":"367","line":221,"column":54,"nodeType":"344","messageId":"345","endLine":221,"endColumn":56},{"ruleId":"335","severity":1,"message":"359","line":6,"column":17,"nodeType":"337","messageId":"338","endLine":6,"endColumn":26},{"ruleId":"335","severity":1,"message":"368","line":6,"column":28,"nodeType":"337","messageId":"338","endLine":6,"endColumn":36},{"ruleId":"335","severity":1,"message":"369","line":37,"column":9,"nodeType":"337","messageId":"338","endLine":37,"endColumn":16},{"ruleId":"335","severity":1,"message":"359","line":18,"column":10,"nodeType":"337","messageId":"338","endLine":18,"endColumn":19},{"ruleId":"335","severity":1,"message":"359","line":6,"column":17,"nodeType":"337","messageId":"338","endLine":6,"endColumn":26},{"ruleId":"370","severity":1,"message":"371","line":46,"column":37,"nodeType":"372","messageId":"373","endLine":46,"endColumn":39},{"ruleId":"335","severity":1,"message":"359","line":2,"column":17,"nodeType":"337","messageId":"338","endLine":2,"endColumn":26},{"ruleId":"342","severity":1,"message":"367","line":10,"column":18,"nodeType":"344","messageId":"345","endLine":10,"endColumn":20},{"ruleId":"342","severity":1,"message":"367","line":12,"column":25,"nodeType":"344","messageId":"345","endLine":12,"endColumn":27},{"ruleId":"335","severity":1,"message":"359","line":2,"column":17,"nodeType":"337","messageId":"338","endLine":2,"endColumn":26},{"ruleId":"335","severity":1,"message":"374","line":12,"column":21,"nodeType":"337","messageId":"338","endLine":12,"endColumn":25},{"ruleId":"356","severity":1,"message":"357","line":32,"column":13,"nodeType":"358","endLine":32,"endColumn":28},{"ruleId":"335","severity":1,"message":"375","line":4,"column":8,"nodeType":"337","messageId":"338","endLine":4,"endColumn":22},{"ruleId":"335","severity":1,"message":"376","line":7,"column":8,"nodeType":"337","messageId":"338","endLine":7,"endColumn":20},{"ruleId":"335","severity":1,"message":"377","line":9,"column":13,"nodeType":"337","messageId":"338","endLine":9,"endColumn":14},{"ruleId":"335","severity":1,"message":"378","line":10,"column":10,"nodeType":"337","messageId":"338","endLine":10,"endColumn":16},{"ruleId":"379","severity":1,"message":"380","line":14,"column":7,"nodeType":"381","messageId":"382","endLine":14,"endColumn":30},{"ruleId":"383","severity":1,"message":"384","line":33,"column":1,"nodeType":"385","endLine":59,"endColumn":2},{"ruleId":"335","severity":1,"message":"386","line":44,"column":11,"nodeType":"337","messageId":"338","endLine":44,"endColumn":22},"no-native-reassign",["387"],"no-negated-in-lhs",["388"],"no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","no-unused-vars","'loggingIn' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-duplicate-case","Duplicate case label.","SwitchCase",["387"],["388"],"'submitted' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'props.authentication.payload._id', 'props.authentication.payload.address', 'props.authentication.payload.email', 'props.authentication.payload.firstName', 'props.authentication.payload.job', 'props.authentication.payload.lastName', 'props.authentication.payload.motto', 'props.authentication.payload.username', and 'props.hide'. Either include them or remove the dependency array. If 'setUser' needs the current value of 'props.authentication.payload._id', you can also switch to useReducer instead of useState and read 'props.authentication.payload._id' in the reducer.","ArrayExpression",["389"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'useEffect' is defined but never used.","react/jsx-no-undef","'Box' is not defined.","JSXIdentifier","'Typography' is not defined.","no-undef","'PropTypes' is not defined.","undef","Expected '===' and instead saw '=='.","'useState' is defined but never used.","'classes' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'open' is assigned a value but never used.","'FormHelperText' is defined but never used.","'NativeSelect' is defined but never used.","'_' is defined but never used.","'values' is defined but never used.","no-throw-literal","Expected an error object to be thrown.","ThrowStatement","object","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'requestType' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"390","fix":"391"},"Update the dependencies array to be: [props.authentication.payload._id, props.authentication.payload.address, props.authentication.payload.email, props.authentication.payload.firstName, props.authentication.payload.job, props.authentication.payload.lastName, props.authentication.payload.motto, props.authentication.payload.username, props.hide]",{"range":"392","text":"393"},[1936,1938],"[props.authentication.payload._id, props.authentication.payload.address, props.authentication.payload.email, props.authentication.payload.firstName, props.authentication.payload.job, props.authentication.payload.lastName, props.authentication.payload.motto, props.authentication.payload.username, props.hide]"]